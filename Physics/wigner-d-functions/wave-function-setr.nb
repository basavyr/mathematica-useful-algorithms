(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    284281,       5519]
NotebookOptionsPosition[    281236,       5458]
NotebookOutlinePosition[    281632,       5474]
CellTagsIndexPosition[    281589,       5471]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Create the wave function set\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3WffFVW29/v9Oed+cB6et3DewA53t7ahsU2oiIoiGBDMOaGiYgCFFlpQ
UMxiDoAEUVFBQBDJZkVFBQmiIiIiQTF31/Ff3qtdrKvCGBVW/H0/e3bv1mvN
ylWzRs055v93+sDeZ/9f//Ef/zHo//ntP3qfNviAyy477epj/9/f/kffiwed
d87FZ53Z4+LLzzrnrMv2Ov3//u0fvvTbf9z+v/7jP377v/8IAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAACl+nLz5mDWC7OD2++8O3jgoUeChYsWBz/88EOjVwv4t1WrPw6m
P/VMcMu424OJT0wJ3njzrUavEoA2x30HAAAA2N2vv/4axo322Ge/4D///Jfd
So8jjwmWLlve6FVEh9u2bVsw5LrhXc5PldPPPi/4ZMOGRq8igDbDfQcAAACI
NmLUTZHt5Er5rz32IpaEhvnpp5+D4/oNSDxH9zvo0OCrr7Y0elUBtAnuOwAA
oN6emDI17P9sLS/MmZt5WRp3ZF3Opi+/zLyc115/w7VN9973QOZltaNKn3hL
eX/lyrqt16LFSxLbyZWyf/fDgp07d9ZtvYCKsbfdYTpHzz7/okavashzrf/z
n/9s9Oo2pXG332naf5OnTGv0qrY09afxPNdVtu/YkXl5Ly142bSMp2c8m2u7
brvjLtc2rVjxbpc6Wu2+AwAAWt+YW8aZ2h+V0vfEAZmXtWz5K+blTJk2PfNy
rrpmqGubLr7siszLakdqa1r3Xd42tMf1w0eY10v5koB6O/yo3qbzU/3mvvvu
u0avruta/+WXXxq9uk3pf/9lX9P+G3DamY1e1ZammNB/77m369m+4OWFmZfX
/7fjZVnGAd17ZF6GYmOe7VH5aNWqLvW02n0HAAC0vldefc3VhlE77rtduzIt
y/rNTGXQFVdl3qZDevZybdOT05/OvKx21KxxpONPOtm8Xvc98FDd1gsQvZ95
7jtvvf1Oo1eZOFIBiCPVzylnnO26xtTmyELX8v/suY95OR+vWZNpOc/MeM61
PQf3OCJyXVvtvgMAAFrfzz//HOzd7UBXO2T5K69mWpYnDtDtgO6ZxlFoHi/P
tqjoN/hDs8aRLrxkkHm91D4H6ulf//pXsPd+9nvp5xs3pta5adOm8H5rKatW
rXavcyfEkTTO2boPd+363l0/caT6efDhR13P9qz7/OWFi13LmTBpcqblDPv7
SNdy9Pe1yrjvAJ1ky5YtweKly4KpT04PxylfPfT6YNDga4JLLh8cDLz08rDt
ef7Fl4b//+VXXh2Oebj2+uHBsBtGhnMGa8yy+j6uXPlBpmcIALQy3Ss9bZl7
xt/vXsb27dvdfdI/+PAj93Jmz3nRtYw+J5zkXka7a9Y40v0PPmxer3Xr1tdt
vYAK67VjHQujebut57zu42Wtr0qrxpH+esDB5m3UnOlexJHqR8fH83z/895/
DXNQe9005hbXci66dFCm7el17HGu5cx/aUFkPUXfd4B2pm/UCxYuCuOyRxzT
x3UNphU9D04985ww7+qKd99r9KYCQOmmPz3DdZ/Mkqtx7rz57vvxI48+7l7O
qJvGuJahHJfYXbPGkb7//vvgqN7p7e6Ro2+u2zoB1TS+ZY+9u6Weo7ofWhBH
yo84Unvp3uNI1zP+nYi81GmO6XuiaxnqD/Trr7+6lqFva55l/GmvbrE5BYq+
7wDtSGNAJ0x8wpxPrIhyQv9Twviv+g0CQDvavPkrX5up24HuMWcj/jHaff89
54KL3dviGTun8uZbb7uX0e6aNY4kai/37BXfBtB34R9/+qmu6wRUmzN3XuxY
YfXJ9MwPSRwpP+JI7WX4yBtdz3jv96gtX3+d6X0xah61JN6xc2eee0FifUXe
d4B28ulnn4d9DL05PIosR/c9IXNOEABodpqHzXNPjJozJEmWvqN77rt/mL/J
SuOSPWPn9H7BXNZdNXMcSX788cfg7nvvC0465fTgL3/dPzjwkMPDdVY7GmgG
is2rz3zv4/qF/QgU+9TcAR9+5LtvEkfKjzhSe1EeEk87wjsf66wXZmd6T/TO
7aA8LJ76H5swKbXOou47QDtQH/YRo25KfC/Yv/thQZ8T+yfet08769zgyGP6
5o5DaT3G3/8gfZMAtJ077rrHdT9UXjkr5YrNet994823zMvxzj13xdXXZtlV
ba/Z40hApyCOlB9xpPai70XKe2Q9pn87+FBX/dcPH5GprXL62ee5luOde27d
+k9c9QOdTLmJeh597G7XkOZgPOu8C4MnpkwNr6dK33V9T46LNW368svd6lVs
6tNPPwvfTZSX+7yLBoYxW8+1rH7zrfo8BYAoyiHguQ9qvgIr79y21eWue8ab
l6N+2566n31+ZpZd1faIIwHNgThSfsSR2o/nvFX5ZMMGc92H9OyVqa2i2Jb6
ylqon7Uln1GlqF8RABv1Way9vnT//eKLTZF//9VXWyKvO8WdLGMWlHdJc/zo
27T6yFuuaY2zA4B2oXtltwMPMbdr1NayumrIdZnaZd62t/IpWevVt4etW7/J
sqvaHnEkoDkQR8qPOFL7mTBpsqsdoW9ZFupnkLWtomLNf7LC+d2OuSMAm+dn
vtClb9HIG0cn5sF/+50Vkded8nF7afzFBRddYrquFXsCgHYx+FpfvOfLzZtN
9Sp/TdZ2mb4HxM1RUk1xMM2ZYq2338mn5d1doW3btoW5ohYuWhy8tODlYOXK
D8I8nc2Yd+nbb78N3n3v/WDW7DnhGMDPN26MfLYSR7LT92f1j168dFl4/D/4
8KNwHp560THVMufNXxC8+trr4fe2Zjz3kE0rxZF27twZ3gt1Heh7sN6Va8cE
NEIrxZH07NB4jLkvzgsWL1kaPk+279iRZbNzUX+Zzz7/PBy7oXV5/Y03wxiL
tb9N2dS/yNOOUM4gi2nTn8rcVlG59bY7Tct55LEJrnr1fGkmGg+0bt36sN2j
81TPwJ9+sueybBa6Zyl3lObT0j5eu3ZdOG6y3vTMVp8YXfsvzn8pWLpsebBm
7drw+d5sdOxXf7wmnPtPx1/7rFnuC7pf1o4xO+TwXqlzrzw3c1bkdZdlrp8K
xbPS+ibp2dQs+w4A8po5y5df0hJL17MwT7tMRc+qNKtWrXbVec/4+zPtIz3n
lT9B466T+qXr3eKwI48OLr/y6rBNkPfd/vKrrgkO6N7DVGrbHoodKU9g1HpG
vXuWEUfSfH3W9VdRnK82fujZB4qVxdG3bGs933yzrcvv1YdZ7wFJc8eqb9+Y
W8aF715F0zuUvk/vd9ChkctWO0o5yJcsXd7ltzo3PMehKDpPrMtUPNtC73zW
Om8YOcpUp+Z2stY56qYxXX6vOcmtv6/tY//DDz90+RtPXk+Nq4lajtYpTt44
kuJEOs+T+rJqjoXRY28N4xJl09jm2u3/rz32Mm+jtiNqH+qeESdvHOm991cG
gwZfE+yxz36Rv9O39f6nnhE8+PCj4b2nDHrP0jjvM845P/zuk7TPtI/OvXBg
eI9t5NyYtblPkkqvY48z1anndZ62iub4thg46EpznZpvJO1dM899x0rfR3QO
aoxd1Pmh81T/Trkzo+4VOres6/hOwtx31naA8k9F0fez0TePDbod0D3xnqW8
5mXFcJVnWd/ytC2HHtEr8R6yV7f9gxMGnBo8PnFS7j70nraP4oPV9N146PAb
IvMIKR7SaGov9jjymC7rphhRGr0PRO37vP0Aly1/JTV3kmX9AKAVqG+NZ76z
qPeoWp7v6XFF7yBppkx90lXn+ytXmvfLjh07gwkTnwiO6Xti5m3QOEA9q6x9
uGp53ve0vhV6Dib9bT3iSN5vvGo3R80HWNR63f/gw+Z6vt669d+/UyxQ+bo8
7/Zqb+vdpIjvivrup/7Snvdi5X6tzs+qc8NzLIqi75fWZVrjV8pFYK1TbXWL
Cy8ZZK4zaqyMNaagUhtXUf5Oz7GxFq1TnKxxJMW8hgz7e9hf1Pp7taf1/qbf
luWWcbeXsg91z4iTNY6kGHNcfD+uKHasZ11R1q1bHx4TT5+t6rLP3w4KY7Sq
p96UX8S6nrpnpvUT9Y7tjypqP1U/f+Mo97e1zvMvvjS1vjz3nTR6dukYx8U5
o4riSYsWL9mtnj4nnGT+fdL8KtZ7Vm3sUMdFzwxPG1fbrHZbUfNrqY390COP
hfsny/ml+63mH1R8IgtP20d9tCrUtybpu2kzxJH0Dah2vfStz/INd8h1wyO3
a9LkqbnXS/22ks65uHgnALSi/r+1da3PmeNPOjm1voGXXp6rXaZy7PH9Upfj
GZOn763WdsGbb70dHHhoz9zbUCn6tpRlfvoscSRL3vGy40jqC+Wdy0LjKPLu
g6LjSBrnoT4DWY/7Ub2Pc+V6raW+RZ5xm9VFcZnKshsVR9L1pvl1rcu1fDNX
f3XPtlhiuNpX1vqUB6FWJ8SR9F558ulnZV6fEwectlt8tkitEkdSXDXPeG/1
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
wLsd1UVjT2tZ39uTrlFp9ziSxkum0THz9H9TPpYyNVMcSf0Go/qp1Fr98RrX
PVXjYqLoGWTN+WfNH1zx1DMzTPVqvoCyefrR1ObAttxvFV+p/u6hucC8x2TF
u++Z1zEuhh6niPvOgpcXuu4F2geWsT9fb93qHudfZBzJkntGcVHPOHWNQ41j
nR9DzzHPtzTr2Gt9P4w7LlniSIuXLjOvYzW9v6j/e9FFOSSKEvf9r4zY965d
0fkPNeYYAOJ8+OGHwahRozIV/baR9J3Y+qypjgtoLmfLb6rb7Dt37jT1LVc/
qQp9H1EuT8uy9B1A33mj6JuZJ4eoZz5Q73Nb889EKaPtFMezLOX58eRBUO71
d997v/T1KiqOpO/CagdbeL5DquhdMcoZ55zvqseaD1LXi+eaVimDJ55Vm/fF
2hcgqejbau1+sX6Hj8uvVNHOcSTNV27NGeHpz6prrMxv3c0UR4obqxnloksH
meuNm4fUM++5xv14xH3Lry0HHnK4q94snps5y7ydw0b8Y7ffHnt8P/e1Zelz
p/ho9XmtcfDWdbT0d65WxH3HO0f95CnTzOunMeyeuouKI6nvq5X68Vjr1fjP
KIqdWJ8l6qflZY11xY1tK+sbWhTdSz3LshZd60VRLsna+tPmdc1K80lEbU9t
ewQAqqlfUdY40urVq9MXUCLlkLbe25WfscKSG1bfq2tpjoq0351/8aX//nvP
c0p5O+Ioh6rnOebJiaf4mqfuuO8gnraTxi/lUeZ8KHHzIRe9XkXFkZLyGNXy
HuuVKz+IrMc67ksl7v0xjvIbeNaxDIoZW/taKBdJNc/7YlypzV+rOQatv027
9ts5jqSxx1b6hu05JmX2vW2mOJL68Fh55n2I6yfnGW+rea7fWfGuuehasFzH
9Ri3sXXrN+Z7SnVsQd8ILL+pfZ5o2y2/q+776MkfmJY3vVYR9x3P3A767qb+
FVZ61nnuB0XFkZLyGNXyzAGh7Y+SNCdXbVE/Ys/1ptL3xAGmupVnLYo3jrTl
66/N+69WK8SRNA9lbf1J87Hmofl3apelbyi1OTcBoJraxy+88II7hjR79uyG
jmuTJUuXm+/t1eO8jzymb+rfK9ZUy/K9Tt96KvtFuaOt61f7PlpN+ac9z7Gk
fNhRPPPoxsVZPG2nqHzkHmXFkW4eGz/PVdHrVVQcScu0Ul8Nz9xocXEkT/8u
7z719pkqS1T7LarU5l5Tf46kv1f7XrG/pL+p7R+ha86yLhrPqr6LSdo5jlQ9
DjmNJ7ezSqfEkd5xxAcU17HWGxdHKmt+Jm+px7uScu5Z1kXvbpVn+KzZc0x/
X/s+rbiY5bmuvIEV1vG4uv97++cVcd/RfBzWOjQvqIeub+1Ha/1FxZE89yz1
k7bWGxdH8uY2LKvMnDU7cv089wPllcqj2eNIGssYFXuOejcpQlQMUHn3ASCN
5s+99957zTGk8ePHB7tK6Ffp9eOPP5rnRtU86KLxy5a/X7xkaZflKX+r5beK
+4jeMa3PnqQ8i9bcTCoaH+elsfTW+uPaPWW1nfIuy1r0vI4bs1fGehUVR/L0
wRC1vax1R8WR9P7gaW9Xj/O0sF5jlVIWzQduWf4Rx/TZ7Xd9Tjgp8e8VS7Ec
X+WaqIjq2x5VLDHFdo4jefrSWPt5VEqnxJGqz7s0nudSXBzJ0je4HiUqJ1nR
POOyKnMuDvt7+lybinlHGXz1kNTfVvIxe8bjRs1bkqaI+44nt7vGXHopfm+t
v6g4kuee5ckJGhdHmjN3XsOvNZVHHn08cv08bZ+kXOIWzR5H0hiKqPrVL61o
cWMe4uJ9AFDr7bffNseR9LfN4oKBl5nu7cptpPxDln70ik1F5c8Vy5zH94y/
P/xba/7QtHFenlweWeYW8rR71Lc8bx2e+YLzLstTsrQ9y9gHnraUp1+85I0j
6bu3Z5+q3eqha9RTf1ms8yMqplaZX145C9LGrkyZ+mT4zppWb3W/P2s/hqS5
1SvaOY7kua8QR8p+zCuKiCMNvPRy13EoqyiHc9k8Y6duv/Pu8DfKSZz2t3Fz
N+kdMO23+u6kto61z6NKlvfYIs5Bz3yeWfps6Fujtf6i4kiee1YRcaTHJ9rb
kmUW5Y6PUmbbp1azx5GG3dA1hqx88Bp3X7SosRZqd1jzDQKAxkM89dRTqTGk
p59+OnXsRD15xo5pTLb6b6T9XVI8wTJ3ivqCenLRpM2t6slD0T9lvqYoln1S
KbW5WyraIY6kkudbTyfEkTxt2co152XtY6hSFs25Yp3DpzLftmVM3oYNn4Z9
utJiB2pDiuIXyv2e9XjVIo70O+JI2Y95RRFxJOv40bKLxuiVTe9k1vuv+t5Y
57/64MOPIpe3fft2U06mV197PcztbVmW6lO9XkWcg55n19333udeR+W2tNbf
qnGksbfd0fBrTUXzn0QhjvSHqPHveb91RtEY2Nqcl/o+pvkbAcBjy5Ytwa23
3hobQxo3blz4N83EkzdQbYsDD+2Z+ndJbUrLu6LaTJ78oer7kMTzbM2Sw9rT
frp++IjIOtoljqTcD998Ez3ffZHr1apxJO/7d6v2RxLrOArlp5S0cSvqW1Ch
eGzS32rOatE7omUdFIuw5CwhjvQ74kjZj3lFEXEkz1ilMsvUJ6e792sWmkvV
sj7KY6d5ktL+7qDDeib2GTjljLNT69A8YNa5E+KOY5oizkHdE6110B8pOo6k
NnCjrzWVuByZxJF+t27d+si6yxhnFjW3SZaxqwCg9sjy5ctj40jLli1ryn6O
nvw+lpKUc1N9sfbudmBqHda5WZSX+6efkvt3efqcqz4vzf9grT9uXvF2iSOp
ZM0D3glxJMUqrOe2ivpLe3j7O5Vp/P0PmtZBY3Pk3AsHJv6dcp1UTJv+VOLf
hrl2t2835zK2xmiII/2OOFL2Y15RRBzJM0dYmaVecaS58+YXut7qR5REY13T
6vDku8ua27De+ZEuvMTfb8PzbGzVOJLnfl1mIY6ULCqGrDGo3xWcl1b5YnWu
VC9HecKarb8AgNah3NVPPPFElxiS/pn+XTMqsq+uZZ4Pz7whaaXyDprEO4eV
8qZ7eObf0vtvlHaKI6m8tODlUterVeNI8reD7edLXB6EONa8RJVSJuvcNmp3
Kb62z98OSvw7vXdXWMasLFi4KDJHQlR5YspU0zYRR/odcaTsx7yiiDiS9fxW
0dxl3nnIrUXnQz0ot4lyNXrOvbR7RJI1a9cWtiyVDz9alWm7izgHBw2+xlyH
5p7y0PfBRszXVu84kiVnVqXcMu720q43zZcZpZ5xJPU7V1+cosvatetyrZdc
cNElXbb30iv8z880Awddudsy1A+yHnMOAGhvn3zySZc4kv5Zs3rjzbcKayfF
9bep5ukflFYseRnWrYvu4xpX4vIlRFG71tN+WrhocWQ9zR5HsuaYqRSNf/Tm
M+yUOJKn/9/Jp5/lWj/vPOBlUuxA/fss67F46bLEf69rbNu23cdL9jjymMTf
KD4eNRdvVFm3br1pm4gj/Y44UvZjXlFEHEn5pK11RM2h2opOP/s817kXV9Q/
QeOA01jn+0grB/c4InN/9CLOQeu8lSrKsfftt9+a10+xDc++aNU4knL5WevQ
86fe6hlHalZx81B7cwSkUR/M6vrVRil6GQA6k76tz58//98xpHnz5plybzSK
2vhpfQGs5b3302PxW7d+4xrbk1TUrzSN+rJ6Yj2ePiCTp0xzrW/ce0wzx5G6
HXhIsPrjNaa5b6rL0OE3lLZerRxHOvPcC1z7ceUHH5rWTdex8n146i6bNXdY
nxNOSvz3Uf0c03Lb6lhZ+i5on1kRR/odcaTsx7yiiDiS5kmz1uEdI9usNOe5
59yLK+qzYHHj6DGFLK96XK5XEeegdZxxlvPF28e8VeNImlvU2nbNMjYwL+JI
QRjLiTqemvujKNOfeqbLO0XcvI8AkIW+nc+dOzeYM2dOpvk56s3T5zmu6L3N
+r2t/6ln5F7escf3M2/fGeecb6632wHdw7l8LdLef6uL4jBx+6dZ40hqv1ba
fPqe7T1Glbm4il6vVo4jeXN1WnM2Pvv8TPfxKVvUfLhZiuZcrDX3xa7txSxF
8y1aEUf6HXGk7Me8oog4kue99uLLrnBvezPSuJcirvspU580LW/psuWFLG/e
/AWZt7mIc1Bzf3rWV+0Vy/fPzzdudH8XbNU4klj7uGq8dr1zWRBHCsJcF7Xb
mjVnZxSdc7UxJOXaB4Ciqe1cZvu5SJ750eKKp/+Jd/xNVLntjrvMy3tmxnOu
uqdMS88b6s27lPSsadY40j3j79/tt3oee7ZZbdFdu9LHDhS5D5o9jvTxmjWu
fag2elxerQqNyd+/+2Hua6hsH61alfs6V4mak9E6L3da0b3PqpFxJI3n8SKO
tHvRGG6vZo4jifrqWevRM8tK9yndUzQeq2ev3uGcZFpW/9/WRefieRcNDGNT
l191jWu7i+DtGxtVvvhik2lZmsejNpeut/xpr3w5fos4BxUT8j4j1KbTvOZx
lCOn38mnufdHK8eRbh47zlzPnXffa14/fbvsfVy/MCeAxmxrfj3FrE465fQw
R/o5F1wczluvvl+LFi+JrKPT40jbd+wIr7XabZ3/0oJC6td7QXWbQ/2dn3pm
RiF1A0Ar2/L1166xX1HF871t1arVuduBb771tnl5asMpB561bj0fXpz/Umx9
ihF4xwKuT8iR1axxpNpl6TzZd3/7e5vKiFE3lb5e1Zo9jiRH9bbPwVwpikPW
5vNQG1/9cqLyAVhK2dT/TuMi81znymMS1z/whP6n5KpbZdMm2/ukFB1TULvU
Wp/iJep/4tEJcSTPu3FtXNyi2eNInvvdkcf0Dd+10uh6s87vpRxoyrNcT5qX
Ps817+nLLLX5dL1FY5nzKOocvGHkKPe6ax5NPfdrKWf44Uf1zrQ/WjmO5MkF
pZiGNd+m+txa613x2zpE6fQ4UtT8rJof2jq+II7yZ9Tm7t57vwMjv28BQKc6
YcCpmdtJWb63de9xZObl6Z0q6TtZlMFXD3EtQ7GkCZMmh/22KzRe8YU5c13f
wFVOHHBa4rq1ShxJrHOpV4rik5Z+AJ0UR9J3yiznvb6F9Tmxf3Dt9cPD97ys
8aNKqYe88zOedd6FsXWrT2KeunsefaxrW4qOKUTlckgq+l6t81tz4WnMqOaZ
SxpL3AlxpF59jjevh+YLGHLd8DD2qvdBxXLeevudxPqbPY6kfMiebxoab5M0
T5net/W8stbXiPFy6o+R57pXfnIP9TnIs7y8uamKOge9fairi/rIqA2lvD+e
OWqjSivHkcQaY1XRPeeBhx6JHSOoNqX6fVnrU96FuLo6PY4UdVw849Zr6dmq
fNqKRVXXqXi8coYCAP7gzdtSXfTs9xrxj+zfFLOMd1Y/ffVtyLK8Qw7vFb7D
Zemzpd8sWbo8cd1aKY6kZ+spZ5zt2gdHHNMnNVdAJ8WR1Aemtm3SiFIPtfOa
eMtDjzwWW/err72eq259n/coOqbgzVkSVTZs+DS2/k6II3ne6aLK4GuT8481
exxJ1FfRu90ao6Z4tObaVq4gxWSz7Eudw/WmnLlZn+Uq78T054izZcuWXP21
FcPIo6hzUPEHzzjIskqrx5HUD8W7zZr3T99U1CdS3+L034OuuCpyHFZSUTs9
TifHkdRnKOoajZsjOYnGsmo8Qm07V9/x1G8sb/8mAGhHmmsta7tAeT688nxT
VE7hLCZNnlr3NtNNY25JXa9WiiOJcp162z+3jLu9LvugFeJIojk/ij7X9G7l
ed+ph082bMi1TUnjAtTe84xXrS3ql+JRdExBfTg9dUaVmbNmx9bfCXGkcbfb
x4NElbQ+aa0QR9JYtUN65s8Z5C1ZcnYVpXacibWoL02W+XOz9tfW2K+8ijwH
9T3N++xOK3q/9tTZ6nEkUb+sel9vyimg/odxOjmO9PCjj0Ve654xtyvefS8c
Mxs13kBjYdPadADQydS2+tvB2forZ8mzqf4pWd4B1WbZuvWbzNtpnYu8iKL5
3PSum6bV4khy1z3j3cdN+aDLXq9WiSOJctUWeb4pNuvJCVsvWcewWt75lH80
S92Kt2lMgUcZMYW8/WmS4tSdEEfSO2ne6yYp71QrxJFE9xuNocm7L6xFY+kU
I24UjenMst5Z35/VfyTL8kaOvjn3thZ9Dj748KOFngv6RnTBwMvMf580zr1V
4kg7d+4M88/X63pTUU6FJJ0cR9J4gdptjJrntZr6NapNqv2msWpR+0n5HXW9
tMqcSQDQSMod4X22KT9FVlm+6aTlGkqjGFQ9vt3q29GatWtN69SKcSTFx+Ke
vXFFz/q470OdGEf66qst4Zi/Is63S6/4fV74ZowjafxMlm3SXFBpHnn08Ux1
ay4crzJiCi8vXJzruPdPiDF0QhxJ42zz5PZTUa6pOK0SRxIdwzz7wVr0TUDn
bSN9+tnnmdZdOcmyWPnBh5mWt3jJ0tzbWvQ5qNh81PzoWYraUpr/odPiSLJq
9ce55/KzlrT+3NKJcSSdy+qTG7WNY2+7Ixyzq3EI9z3wUDD21tuC64ePCOe9
Uz/UpPle1dZT28I63zAAwNe2rb5XZ6X5zL3LyzLnTi31Q1D+3rKe+cqFrHau
VSvGkSRLfpe48f2dGEcS9VP3tMGjisbxb9++PayvGeNIGoeaZbumP50+p+5H
q1ZlqnvMLePc21FWTEFzImU99hrLGDfnQCfEkUS5spPeCdKK3jHitFIcSfRO
lSd3UOr5ts9+rrlZy6S50T3rrmOZNC4oieKVmpPdszzNg5CWF9CijHNQ79+a
7yFP3qeDexwRztsmnRhHEj1/yv4uqdxlSfMpVHRaHEn57xUPKnJfH3pEr3B+
nSKuWwDoNOrf722PW+biiqPceN77fNLYKA+1o5SfNE87KqqoT5f3GdSqcSTx
zDWiojaxvuOVtV6tFkcSnYuKj2YZ56m+PtV9vJoxjvTl5s2ZrqWNG79IrVvt
6yzjcbP0EygrpvDdd9/l6lNTeZer1SlxJHl+5guZY0nqmxGn1eJIor4zeeZD
jSsap13U87cIigV71v+Mc87PtbxhN4x0LU9j6ItQ1jko819aEM7h5z0XTuh/
StiftqJT40jyzTfbco9Pjipqbzz73PPm9eiUOJKeJ1ddM7Sw/az48Oibx4b5
9y3xOgBAvFPPPMd8/1U+urhv4VYaX+J5rhZ9n9fcG+qblDeepPfApJy3SVo5
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
AOpn3fpPXO2rk08/K1j98Zp/5xL98ccfgxXvvhds3vxVg7cEjVJ2HKni2edn
hvGkvx18aJgTXu+V6j9MPySgK92X9X5+2JFHB3/e+69BnxNOCkbeODrYuvUb
Vz3Ekf5Q1D5tN3njSP+z5z5h/KcId997X651IY4UjzgS2kXZcSTR+5HuRyed
cno4NvrAQw4P75Vz5s4reGsAoDFef+NNV/vq3ffeb/Qqo8nUK44EoP6IIyFN
3jiSit638vr111+Dgw7rSRyJOBKQqB5xJABody/Of8l8L1X7rOh8mGh9xJGA
9kUcCWmKiCOpfaE4UB7z5i/IvR7EkeIRR0K7II4EAPlpzknrvfT8iy9t9Oqi
CRFHAtoXcSSkKSKOpKLvWnkk5dEjjkQcCaggjgQA+T0941nzvfSCgZc1enWb
msZCK9/U4qXLgpcWvBx88OFHwfbt2xuyLspNvW7d+nAenLkvzgveePOt4JMN
G4Lvvvuu8GW1cxxp27ZtwUerVoU5dHVMV678INjy9df/zg/WjHbu3Bl8+NGq
8F1I5+LateuCXbu+r+s6qN/ili1bgvfeXxn2EViydHlD1gP5tVIcSdemchjp
nrd4ydLwet2+Y0eWzW5q6rezceMXwWuvvxHMnTc/WPHb+71yFDbqvlRUHElx
oKz0fPuvPfZqujiSjomOzdvvrAjzouheuPKDD4NNmzaFbYaitUocqXIOK7eC
9ssrr74Wrk8jcg8rx6LmWlQ7SfcOrZPm7ijj+BThhx9+CPOULnh5YbD8lVfD
dc/Tl0+/VR06BqpT296Ie4nay7o21GZ4eeHi8L6mdfn2228LX1a7xpEq9xs9
BxWXX7R4SbhPv/pqS+7+nnnU89gCKMc332wLDujeY7dSPedaWvnTXt26/L5S
1JatpTZ83N/XluP6DXBty9VDrzfXPWv2nNh6JkyabK5H+6+W4jKPPDYhOPyo
+HkZNB/emFvGlTqnmNoAarcde3y/YJ+/HZR4HJXvTzFB5a323sPVfulyDnWz
n0PKTRu1b7v3ODJyeZ7jU8Qcqnr2Xj98RNDz6GODPfbuFrsdevdVrt3Lr7w6
WLpsee421+VXXWPaxlPOODvy959v3BiMvnls0O2A7rHrfMQxfYLHJkwq5b1a
8aJhN4wMTjvr3KDHkceE94q49VD7rc+J/cP5Sh59fGIpsc1aimtpXj/ruaQ4
nKVO7VNrnZ9+lj4nvN5ndC1Y69S7aLW891y9R9T+na5Z6/Wte0HUsnR+x8kb
R9K5N2jwNcEe++wX+TvN3dX/1DOCBx9+NNO5VtRzzFOP3uVq6R4ze86LYc5W
5aWOu79ecfW1wZtvve3ezjyKiiMpDqR4UBZ6xhaxDip54kj6fjTiH6PDmJie
I0n3Qm2vzplxt98ZxgS9c0bce98DXc4dTyxNbZOo80/P3Sh540g6h/Vuq2s5
7hzWday+78/NnFVaLEOxKrV/zjjn/DD3cdI+0z4698KBYTsyb4zLem+/9bY7
u/z2p59+DqZMmx4+c6LWU/tTz1/dwy10rs149vmg74kDIuc33HPf/YMTB5wW
DB95Y5fnTBEU17j9zrvDdkDv4/oFe3XbP/F8OvSIXuG66PzRtzKPel8n1vac
StL7icUvv/wSxmbUpj/k8F6x11XlWah7ks4vxXTKUs9jC6B+vt66tbB2Vm3R
M7+Wp82h+5+H7pnWutXnKo7m+7LWo/1XofbNXfeMd8VQ9NxS3KGo+LueH3qv
UHs163dYtXE1/9D6Tz4xLfP7778v5fzRu2Te43Pt0GGZ9uOOHTuDCROfCI7p
e2Lm9T+kZ6/gnvH3Z55zyPoe1uvY47qsu94bPfNcq52udc2b60zXgN63FNvK
c+wV91S7Rm2PMl16xWDzOqm9nsY716Xa7GnUtvOcc7Xy3nP17bKM61vnd5ys
cSTF5fXe5FmP/Q46NJgy9cnU41DkPs1Sj+7r1dRfQ21tz7bq/XDduvWubc2q
qDiSiuJBXuo3khRD95YscSTFngdeenmu5WouUvXps8aTbhl3eynXq567UfLE
kdQ3Nmke9KiiZ7Lia0VZt259+L3F0xeluuhZdcPIUZmvK+u9TnHIarr+Pfnj
FTfX8ynOk9OfdtWndq5+UwT1U9YxSPpOl1bUblUdUd92o9T7OvHcD5PeT5Lo
+ad2k2JRWddf37/V9i0qXtuIYwugfogjdZUljqQ2nr5/Z91XR/U+LvM31wrF
K/Rduqjjp/v+I48+nvo8abc4kr7bH3ho/vl9KkXfXbLM6ZoljqS+y3liX3rn
0fjHLJ6f+YL7nSCtqP2gvmAaS1gGxQ+s6zJk2N9T6/OMCVYZ9veRqXVOfXK6
ub6hw2/o8vtOiSNpTIf6EWRdH51n1j7+jY4jPT5xUubvBOpvrDEEZSsyjqR4
kLffx7PPPV/o+eqJI61Zuza4+LIrCl2++nSqj0GaVokjqc9FUj+JpKLfTX/q
GfPxiKPrKOs61BZ9i5n+9Az3OmSJI+k54/lOVCmKE0X1gVc/kazbrW+WWb/3
aFzTTWNuyRVjqC2Kb+lcTWu3tlscafKUaYn9HL0ljDuuW+9ej4pGHlsA9UMc
qStvHEnvHkXk8tx3/4PDsWhZqN+yvluWcRz7nXxa4neAdoojaYxXUe3K2nLz
2HGusejeONIXX2wK+6PkXc8TBpzqGkuhPky33XFXKfusUo48pm84Tq9o6nNn
XQfF59IoLuTZrtq+ZHnrnDlrdpffd0IcSbkqsvYnqC7qx2fRyDiS+g3m3U69
g+bNX52myDiSiuJCHkV+U1GxxpHUVyZtzEbWothhWr6xVogjafxYljhIbbH0
EY2iNsvgq4eUsp8GX3udK+efN46k6yBPzi/dj9RHpEL15t3mpHt5HH331PfT
Mo6Biu7lSe2tdokjKa+EcnqUsS0aEz1t+lPeQ9vwYwugfogjdeWNI+k7QFH7
TOOBvLF29UEtok2WVPr/9r4W9z24HeJI2ucav17mPqwcX2s+Fm8cSeMji1pP
fZ+00rtB2ftNRd9Sy+jXfHCPI0zL1zWW1ldL+ZY826T3gbS+Vn1OOMlcX/X7
QUUnxJG8Y9mSiu7naRoVR1K8rKh7vfJ7RJ0vRSk6jqS4kJXyERV9vlriSMrJ
XOT397iivF5xmj2OpFx8+mZWxDrpPVfH2kN9Z5Sfpczjo3u23u8tPHEk5T8o
Il6u7z6V87WobX5hzlzzMVC7WbkkyzwGKuoTqBxSUdohjqRzWflPy9yHet54
+mI2w7EFUD/EkbryxCk2bPi08H5ADz/6mHmbX33t9cLmo0kr+gYQlT+nHeJI
RXzjtxZ9O7LwxJFWOK4rS1HbQXWm0d+UHcOsLmXMD6lzxLp8zdkTR3mpslyL
UfmTK/QuYt2/imFFafc4kuZNLHK99G6aNk6jUXEk5fYtclsvuOiSxO3Mo+g4
kool170MG/GPwped9i6lcRye/DJ5S1ze9GaPI4299bZC10sxGyu1X4roO24p
ljHL4okj3X3vfYWsm9qsegc/9cxzCttejSm25PnUMTjvomLvY0ll/P0PRq5H
q8eR9O1TOeHrsQ+VX11zQrTKsQVQP8SRuvLEKcpokyjvq6XPpr7rWftSFFUm
TZ7aZT1aPY70Tp1jISqzXug6/qiWtd2h88XTZ8Va9L0nTZH9QKxlwcJFqevl
4cmjkhTjVc7YLNsz9rY7Yuv03C9vHD0mdx2tFkfS+sbNVZSnRM2NVOQ+zVJP
We+/H62yxWa8PO9NmpfH8neKD6XRu6zmH02rS+/SnrFvaXEkTzy6iBI3T2cz
x5FOPv0s11yP1qJ7r4XyPdbzGFn66FjvdRpv7pnDJa1ceMmgwrc37b4p3hyC
eYvywSnGW6vV40gPPfJYXfejYuRpOeqa5dgCqB/iSF154hRllcVLlqZur2eu
qaKK8u/UxrhaOY6kMWZZ++Bq/bK26zTHy8aNXySuWxnf8z1FORvVxyaO5v31
9L/R3yrHkN4ZdW94acHLYT4qbyzqnAsuTtxvXtoO67IHXXFVbD133n1vpv3c
P2buetEcwtZ6tD+jtHMcqayi61NzX8ZpRByprJIUx8zDc/966+13wv2U9neK
D6X1eXhiylTTMvUe6Yn9JMWRlJvOm1dPcSD1WRl3+51hH1XNve09dlHxk2aO
I5VVLP3qNP7Nm4dYzyzlN1f9mu/eEp+sLnrP1bmRpNH3uiKL+jclUX8V5Tr0
1Kl+tlcNuS68TobdMDLM/+xdr6j4VivHkTSHayPOm6T5+Zrp2AKoH+XTXf7K
q7sVzbFrvYb1Pa/295VSRq6OJM0SR9LcMvp2pPwTWetQrsYkWfo+qO+S3hk0
jkZzdixb/kpw3wMPhW0dTz2139jUv7b22I+80Z67Ud8oo84f5Q7Pe3zS4kh6
Bnn3o/p9aN005kjb/v7KleF+9LZRk2ISkjeOpJjf8SedHPZJzlpH0pw4alNY
61E+jLhxGLJ02XJzG11t+61bv0ncd17WPi1J96Qzz70g0z7WeRP3nc+aP1P9
6XbujI755b3nKn9T7bWpa9Zap+4FUdd3Ul6TPG1k7Qvl+FTMMk89SeM6myWO
pGv7uH4DcuXX797jyMjxynl57l/aD9axxYoTJbHOV6n5UYuKI3nmu1I8QnML
1tKzRPdUT2x+1E1d+yBqu2qvNU/eb+XVjbpe4+Y5yHsOK59U3xMHhPGarGP0
9exI68PteUdVTFA5hGpzGeo60bPfE/PTO3KSrPco7TedS4rdKO6d5xio6L6p
56Cu26zHQn38kqjNaa1L/azjvqcq7qx/b61LOYRq1fs6KTKOpOPuPTaai1fj
CfTcXbVqdTi/rreNqRwKcc+KZjq2ABrL0zfRm6+kneNIGr+uederKc+G4uze
utK23ZsTus+J/WNzfmz68stwTjZrXfrbNJpTxlrfJZcPTq2vWlFxJLXbvfks
Hn18Ymx9mkvb0yZU/EBjE+NkiSPpvVJthepv9tpO5edVLhlvfUn77657xpvr
UWw6jfrTWOtTe61IN4wcZV62+nDW0j7OM0dTXIzNOueJ4tZxyrjn6pq11pk2
v1SULO9WiodozGN1TE59ijR/Vpa+Hho3UPY+zfoOrj58uqar52TQO6/mXMiS
5znrPKFJvHEk9Qu0jC9OmjfRmjdY+0+KiiNZYxQ6D5P6eIqnn4RykVh4cjPr
vPLIeg7reaR32upzWPOcTX96RqZ+vu++937sOipmYK1H3wHT9oHuMdZ7oO5L
SXOneO91ukbuve+BLnEzzYGXNZ6kMW6132aU+9PzvaBSkto01nldtU/ScqF5
+snusc9+plh5mddJUXGkdevWu8+XqHwUFVOfnO6KGcaNIW32Ywugfogj+eJI
ugen5WyZ8aw9B0vlXht3b9T7guddQd/60uYI0zcUT3+QH3/8MbG+VogjKRbh
OSYat5RG33g8deoZHscbRzqge4+wn1kctWWvHz7CVadyssTx5LJNml+oQue7
+lWo3aO2gfow7d/9sPA+oPcvvT+qf5Xe2Yqes3zui/PM26J4YS3lmPHs19ry
wEOPdKlTsUBr+y7pm3cnxJE0RihpvJPG3nrHT+paKXufZnkHV5whqd28Zu1a
9/ibt99ZYTswDt44klhztCpeFMU6l/vMWb/npysijqT7qsbaqm+28tSpT4di
B+qPrLh+9TVsmQtQMWXrOh1+VG/TsWi2ONJNY25JjK1ozLenT4JKVB6FCs+Y
Y+vcVIoHWr9DxfWtFu+9Lmk7V7z7nrsfUVK/aB0jPXM99b2T0I9T9y6N41ab
VN9I9LxXHyZ9g6mOIWvu2TT6RuDJtaXvpWlaIY7knR9X8cU0I0bdZK4vrq3R
7McWQP0QR/LFkYYOv8G0ft5xL3HzgXtz2c2dN9+0fpr7oKhnaCvEkTzvEHof
sM5Foj7h1noHJOTG8caRLO0FtX094y2Tvv17+iPpfSfpO2VF0rtFmXStWdvf
UfHEKVOfdB2r2nL+xZd2qVP9aKy/T+qf1e5xJPXrW7f+k9Q6NZbIk09/4KAr
Y+tqVBxJ7XONRU/juZerWJ8RHlniSPPmLzD9veJFtdSfwjK2WP1NKn3WiuqP
lEZzY2ncqWX+DI2Ttq6T3rUsmimOpDibZb5u7z1VueSi6JlszYFomVui2lPP
zDDVO+S64bF1eO51Se2FCi3LWp+ul7hxWBXeuWCT4lxpFD/QN8+075SVv/X0
v1KMLU2zx5F0Lh96hH0Mc+/jbGO+1A/Qmt/C216vaPSxBVA/xJHscQq9e0aN
c4mib1Ke53FUDgXxPI8U07C+myt3n7XetP4gzR5H0ruY55v9kGF/L2X9VDSe
I4rnOB/d9wTz+nm+Z+mdK47mIfdsp/pLadxNWru1UTT207IdUXm+lSvSsy9q
i9qvtX1MNDec5bd6l0xqm7V7HEnjia0uutQ+R1Fl7FOURsWR5sydZ9pOnQ+e
fZg07iGrLHEkvT/oPpH293r/rR2Hoz59lmWNvnnsv39TrziSlbbfs05xc1HU
aqY4kp4bFoq5edZb+bWieOIg3uvg4zVrTPUeeMjhsXV4rtOk/ssVmgvWWp8l
R4F4xmxb5horgvITec67pH5SFc0eR/Jea8/MeM68ftb5+6yxqTzKOLYA6oc4
kj0O4FlH5Sfy3BtXrvwgsh5PTtW4uSOiKN5U6ZufVjROL0mzx5EUy/Aci7hx
FFG8xzmuz7un3ZGWT7yap52pWFscaxs6qii+qfkG1W9i4aLFwZebN5vXvyzW
+QWiYmvqb5V1X1SK9me1QYNtOdBOP/u8xO1q9ziS+gRYefLqJ337b1QcyZPH
yJo7XuWRxyaY67XKEkcS6zGqHguqZ5e1z0n1ddYMcST1U9IzQPm4rPnQKqUV
40iffmY/hz15G/V9JIonp4DynGt7rEXtAksfR/1NXF80z73u1ddeT91nnu+B
+v5hoVz+1jrLiiOpD6H66qmfWpbcke0QR1JcyFqHYn+Wfn8VWqal7W+NPXrU
49gCqB/iSPY4RdLc1bXU30B5X6x1R8WRVIen3VHGeAWLZo8jaU4Iz3PKMiar
mnL7WOt+9rnomJzneeqJFyofqbXepDiS+nRZ+g5Yi/JhKB+TYkvKw1jv3Ima
P8S6rtV5qNQfMe3vNb9t2t/Ufmu2vhdrrsAk7R5H8rQhPXMMNlscSTnxPOM+
rbmGVJopjmTNiazro7I/rNeucqtVq0ccSfcxbZPyqmmeBuX01zzy+q6fd56t
Vosjqe+k5xy+6pqh5rrj4kh5598tqtTOwVLhudcp93UaxZqt9SmnjUWRc40l
0Tc4xVSnTJsejB57azi2+IT+p4TtjKxz+VVKO8SR9Ky31pGUk6ARGn1sAdQP
cSR7u0Pzcnt43ruj4kiWd9bqkjR3dZmaPY7kGZOl9zcv69zTKnExIE+7w9Mn
Q7lkrPUmxZFE71ae89FTDu5xRJjLOylHaZG+27UrnO/Zsm7q0+XZB7qW08ZR
Vt9LlK/Jup/S2lDtHkfy9G/wXPfNFkdS7maPK66+1lx3M8WRxJoTXfP6iHVM
Ru1zv6w4ksan6e+H/X1kcOChvjlBPaXV4kjec1hjVq11x8WRRt5or6PMov4W
UTz3Okt/xFaLIynH/9jb7nC1mbKUdogjea6HqPH39dZMxxZA/RBHKiaPc5S8
cSTNk+u5vzZqHoNmjyM9NmGSuQ7rnDjVPG0GzZWRtw5P263IOJJY50jKU/Tt
qh5j3xQ7sKyP5huqSJunW9e8+iQol3bS36l/RcWSpctN66H5sdNy97Z7HMkz
1quV40je52Erx5E0n5rld3rma24vy9gi5ZHVvH3Vio4jqa+N1r1nr/zjXC2l
1eJI3nO4iDjSwEsvr8uxSCsLXl4YuX6dGkfSN06Nya7X/m+HOJInv1/SfKNl
a8ZjC6B+iCM1bxxp8dJlrvurZW6fMjR7HMmTJ6W/YY6UWupbYq0/bt7dVokj
bd++vS5tBsVMLHlG87DOD119Tpx8+lmJfzv42t9zUDw+MT12WRn7YJ1vy3L/
JY70B+JI0aXZ4kjKl2F5p1P8yPqtW+PJahUZR9JcmNY4dFGFONIfJS6OdOIA
e46lMovG1EbptDiSvql45pkvqrRDHMmTL+z2O+92rV8RmvnYAqgf4kjNG0fy
5rTUmORGaPY4kqcO5T71Sut7Ul3ivhu1ShxJ1H5QjEexHs/5maUsWLjIvK1e
r7/xpmkdlOdM/YAUp1XOj6S/reSkt+Qlr8xlZP3uqNhUGuJIfyCOFF2aLY4k
o24ak+s+UVvUl7dWUXGkb77ZFvQ90Z6LuKhCHOmPEhdHso6RLLvEfQPppDiS
+usNuW54Q/Z/O8SRPHUoJ0A9NfuxBVA/xJGaN470xRebXPfXuDH5ZWv2OJJy
W1vr0LwXXtY55FXuumd8ZB2tFEeq2LRpUzB85I2l5gRRPu6y4qOa38SaC1+5
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
W3crxJH0vPJ841Ff2qS4n56hnjyVSeN5OiGOpHFK1r7Gmu89qb+72gqe3OmV
Yok1lHmdFNWeU9td70GebVdbTf2IFi9dFs4Do/2r/pHDRvzD1QdcYxbU/6gV
jy2A+ik7jvTSgpfd94miS6vHkTRO2vPMi3quZPmd5oDQe3Aa9aXNe4zi5nMo
8vgopqb3jSzrpzax4l+e53Cl6DdLli5PXLdmjiOJty+gYj9qt6o/uOJwmuNV
8QSN8/LklFK5euj15u3NKkvu70pRDgO1r+J4+xPWli1b7DnGy3jPu/ve+3Kt
v3KUJyGOlP3YVLRTHEnxIO99+qoh16WuY944kp4fnnVS/FXf76vpPvH8zBcy
9dO2xpE8eXCjiuZxjdMKcSTxzJleKfr2du31w8PrQ/kjb7vjrkz7MmlsUSfE
kcTz7Vd9WFd/vGa33yvGoG8z/U62x++qiyXWUOZ1UmR77tnnns+8jlnaq5Wi
tnerHlsA9VN2HEn9exWPyHO/jiqeZ0Crx5Hko1WrXP1Riyhjb7vDtJ365lBW
n4uij8+kyVPrug9VFDtJ0+xxpDx5S/IUfQfUmNayXXXN0MzrGJWLsppnntza
ohwcHmW85ykGmvc4bt78VWz9xJGyH5uKdoojieJCnvPLkr8kbxxJfQOUA86z
Xrp/KW6u3Dm6lvM8J61xpHG335nrWlU/gjitEkdSLNKaD7jIkjaut1PiSJ7c
CSqKd2iMofqyag74vPM2Wu4xZV4nRbfnPGPLiyjKARGXn6AVji2A+ik7jiR3
3TO+0Hvc4Uf1drVn2iGOJJqntl7PEY1NisuxFCXvt524WEsZx8c7V1ieoneI
n36KzpVQrdnjSKJ+0fXab5VSm+exLE8948/fXylpc5StcNyrasuom8a4tqOM
9zz1h8zaj69S1C81DnGk7Memot3iSMqrb61P7ygWeeNIkifenLdY40iefRdX
4nIYtkocSdSmUhyvXsdHY+k+2bAhcZ06JY705PSnG3adqBR9j/FeJ0W35zQ+
TddTvfZf0lj6Vji2AOqnHnEkjbFVXKKo+4jeD9RGKOI+3UpxJPUHVd+Hsu/T
yhegcUgeLy/Ml0+4f8x7XBnHR2MN6vGtUv3wlHvHohXiSMo12ufE/qXvt0pR
/hBPLDMPz5zetWXduvWJdWssy9772efvrS6aK8+jrPe8MbeMy3UslQchDnGk
fMdG2i2OpGed5oI0bc+jj5vWsYg4kuYWyjpOPKroWWuNn1jjSNp3+u6fZ72U
tzBKK8WRxNO+zVN0TqgNlKZT4kg//PCDO69P2v71jK+23mPKuk7KaM+pz6Vn
rpisJe3aaoVjC6B+6hFHkjy5aarLwEFXhvf/TowjifrW5+2Pm1T0vqsxTFl4
512oLjo3onLMlHV81GfXm+fUUxRvUW5zq1aII1X2m2J+Ze23SrnwkkFh3Kqe
ehx5jHs9lefEQrlXvXWrfaXvkB5lvefpu2ueHFK61uIQR8p3bKTd4kjy0COP
pdalsd61OYjiFBFHEvURzHodVBeN91j+yqvmZ5w1jiTKAZwn3nXfAw9F1ttq
cSRR34oi2p5xRe/28+YvMK1Lp8SRRPPd5snPU13uvPte17lnvceUdZ2U1Z5b
tfrjoGev3qWdy5qLJm7Om1Y7tgDqo15xJFF8QnMAZL3fqB1YiTV0ahypQu0W
5fct8hmid71Nmza51qPad999l+v7zocfrepSZ5nHRzE5tUeLeh5Wiub10Fgg
j1aJI4niO8NH3pg7J1ZU0Xuh+r7UzhNSD8NuGOleX+VltZg8ZZq77rQ5/qKU
+Z6nfJlZ587UmI+49ilxpPzHph3jSFu+/jqcMzOpLs0Ha1VUHEnPjbzj2/TM
qeSxLSOOJMrnnfUdWTlQorRiHElWfvBhoX0oKkXj1t9fudK8Hp0URxLlK8+7
j/XeoXZ/WbGGMq6Tstpzom9L+s5W5HmsdwnNC+3RCscWQPnqGUcS5Vv19mfY
c9/9w5h19XtIp8eRRGPxFbPI29dV73iap9vyHSKNYknqo6r5urzrMW36U13q
K/P4VOibsGJoeeNJiqF55miv1kpxpApdy7fedmchefS17/Vu5okTFG3W7Dnu
9bYe7/Wf2I9DpWi+IK8y3/NEfewUO0t7v48q2gdRiCPlPzbtGEeSSy4fnFhX
3LiSKEXFkUSxpGefn5mpD6NydS9c9McYqLLiSKKxMGecc757HTXeLkqrxpFE
c88++PCjwX4HHereH7VF+SAXL1nqXodOiyPJm2+9nWnOUsV2dG3oWpMyYw1F
XydlxpFEbXW12TWHcN5zWev6xRfZvh+3wrEFUK56x5EqdN/WHARJ7yP7dz8s
GH//g8H27du7/J440h/0fUL9HTy5axSb0/5Xv6Yyxg9pDje12XQM09ZF50D/
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
vGmoV0eaPefR4DOPPv6k5Lvvvst9/xn33h+MY9bsOT3uu+2OO6PeefyEy3po
mWgN+GcO3XvsiSfnpnvpc8+Hv3//gVF7OqvUke6bGef33Rd22XPvKN0XnS8U
F7ZYeXFRH9F/QnGsW7e+233oiqF7HnhoVmHaDz38qGAcWX9cQgghhBBCCCGa
C7YIZX0NNRv0LebJ9c6x6wn4ZwlRRkci4L8G+w3OLMMmJ1bXYn+dndeVpV4d
ie8csm8hYONFXnz62WfpfV9/802yeMmzqS/s0N5A9s59/8MPPZ7NHq6/9ds+
6t2HHHBQcunEy5OZD85K9Y1B++4fdR9pzGPDhk+i4ug/cLd0zyHfa+y4i+su
A7E60qYvvojab+kLV0yeGvWM1au7osodtlGvvPpaasMHn3yyMXnsiSfT8hu6
1+ffClup0H34QcJvWdYuib2l2L2F7t9q2x16XdslhBBCCCGEEKI9MA+td45d
NrD3JoayOlK9AfubPOrVkSDG57UbsNEpY9N1wfhLcp999z33Ni2/Bg0ZWmib
g01N2XPB0Dh89klV6khwzAmj6npnzlmLhT17pb77DgNLXf/o40/0eCbfY8Cu
e0Td33+nXVMtirzdc/B+0c+N8WkvhBBCCCGEEGLL4a4Z95bSMeoJnD0ee0Zd
jIZAfI2kZ+Dugwr3ljWiI8FZo89vSj6S7iL/Smg5x486tfLnojXG+FoeftiR
peP2nf9WtY406+FHSqcLraUMlKdYu66yAf3nl196+oNP3232nKY8k4D29O23
35bKByGEEEIIIYQQfZ+lz7+Q7jdqxlyUvUEhH8MuMRoCfrRj7TB84alFTxem
oVEd6YcffkwOOGREpfnI/j32T4Vgv9Le+x1Q6bPvuW9m1Ld77vllpTXJGffc
1yOeqnUk/JKVOeeecPW110fHb3zw4YfJdgPifHPFhhFHHO3dx+gy/c67K30m
gf2TL770cuk8EEIIIYQQQgixZYB/HeasVc1DmU/Xc85TjIawcePGVPuK9Qdk
4X+33i71RxOiUR0J0JI4b62KvMQuBO0sFmxjOIuu0eeivUy75bbo58LUa64r
9QzfGW5V60jAOWhl0lUmv13whT1k/2GVfPeDDj0s2h4I//dV1d1td9y58IxG
IYQQQgghhBACsBvCJ28jtjRoHpxTjt/leojVkQD7FzSdmHRhzxNrX1GFjgTs
M+P8tXptp7AJmTR5SqrxlYVnc4ZbWT88FjirfuXKd0o/F5/MnF8W63cLv0tZ
mqEj4V8o9t3RgRrh+++/T89SK6tzWsAPO76ufvzxx1LPRVvlTL166y664SUT
Jqa+yYUQQgghhBBCiDKgITCnjNmng2bA/HXu/AW5flxiKaMjweefb0omXp4/
Z2ePF+eSxfpngqp0JOOnn35K928dfvRxqU1U6P123mNQctPNt6bnuDUKz57z
6ONRPqV4r7PPPT9ZuGhx8uuvjX3HtevWpeexFe0n26pf/+To40/qse+xGToS
Nlqxus6N025p6N0NyiZ+qtHkYurQ/gcNT79VmX2gPt5btSo9Ew8dMvRc9iEO
Gz4yuea6G5I1a9dW8t5CCCGEEEIIIbZsvvrqq+Sdd99LFj+zJLn3/geS26ff
lTw5d17y2uvL07PLe8O54OglH65enTyzZGnyxJPz0n05X2zeXFdcIe2srI7k
go0JdlHsr0NbQrPABuzZpc+l6Wc/XLMgP9Bf0InwecSzZz7wULr/cMWbb5W2
f4mBONd/9HGy4s/vQfl59LHHkxeWvZjqTI1qVZ0Eeb/k2aXJI3MeS/0ZkfcP
PzInLQvr13/UtLxAi0RXol7wrXku5Y46wneot44IIYQQQgghhBDi3/5tQjYc
uw0a0u5kCiGEEEIIIYQQQog2w36ykI406rQz251MIYQQQgghhBBCCNFi8LX0
0KzZ6V6j0WMujPIPjS8ZIYQQQgghhBBCCLFlgY+YsudaPTlvfruTLYQQQggh
hBBCCCFaTFkdaattd0h9iwshhBBCCCGEEEKILYuyOhLn1AkhhBBCCCGEEEKI
LY8yOtJVU69pd3KFEEIIIYQQQgghRJuI0ZF23GX35PobpyV//PFHu5MrhBBC
CCGEEEIIIdpEno7EuW0HjzwiefSxx5Nffvm13ckUQgghhBBCCCGEEG3myy+/
ShY8tTCZO39B8uJLLyfvf/Bh8sXmzbI9EkIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII0YPf
fvsteefd95IFCxclr772evLDDz+2O0lCtAXVBSGEEKKz+WLz5uTZpc+loWvN
2nYnR4iGYCy67MWXcsOLL72cvPveqrTc/+tf/wrG99VXX9Xu/fzzTS14g/by
5ltvp+/62uvL250U8Sd//PFHrfx98OGH7U5ODerQiCOPSYYOG568sOzFdien
10Nbc+31NyZb9euf/L+/bV0Lp555TlOf21vLTxFff/11Lc2xY5JPPtlYu2fF
m29F3fPdd99580Zlu7m0qy50Kk/Om58MGjI0Oe6kU5KPN2xod3KEaAud2Jf1
NR6Z81iyx+B9k1GnnJ589tnn7U5O5Vx97fXJwN0HJWPHXZz8/vvv7U5Or2f1
6q50nOT244T3Vq1qd9KEqJtV73/Qo0znhV323DuZcvV1he0h+qpdP3vOoy18
k/Zw8Mgj0nfdba8h7U6K+JMff/yxVv7GXDCu3cmpcdpZ/6ila/+Dhrc7Ob2e
088e7W2DHn38iaY+t7eWnyJojy3NRx9/UtQ94y6eULtn6+0HpLYuIRgT2z23
3XFn7e8q282lXXWhE2Eus8POu9fyaOLlV7Y7SUK0hU7sy/oSP//8c9Jvh4G1
b4Dm0pdYter9bv3RwkWL252kXs3ry9/oVh4s7Dl4v3YnTYiGKKMjWWCclrfu
3GodafkbK9I+krDynXcrifPhR+bU4qQvLkI6Uu+i1WOn2LIy+epra+k645zR
TU9XJ7Nm7dpaXg3cba/k+hunpXX7pZdfSb7//vu64pw85er0G2HXUUSnjr33
O/CQNM3YrPz8yy/B61kjddt0xjghzrvgotr17K8yVLabRzPqQqcSW4cPGXlk
Lc/uvf+BFqVOtIOvv/mm1v8+/sTcSuJsxpiySvp6X9aX2PfAgztuXT22TmEH
vdW2O9Tej7mkyGf0eWNreTXqtDOTBU8tTLW4t95e2e6kCdEQro50wsmnJW+s
eLNbYL/WE0/OS26cdksyeL8Da9cyX/lw9eoe8bVaR3rsiSdrz1v09OJK4rxo
/KW1OL/55tvCa6Uj9S5aPXaKLSuka+aDs5I77rwr3fsp8plx7/21PL1rxr2V
xLnXPkPT+A44+NDC6zp17H3F5Km1dL/8yquF13708cc91gZo30Ngj8q1O+6y
e7c9zirbzaMZdaFTia3Dn372WVqeGRv8+uuvLUqdaAcbP/20Vj8mXTG5kjib
Maaskr7el/UlNmz4JLnhppvTvbadsu+rTJ1CZ2WPCv5PRD7sMe0/cLc0T7ff
aZf030L0FVwdKdTXsM596cTLa9fjEyOLdCTRTnqrjiTicfdcVeWDsK+PvZ97
flkt3dfdcFPhtbMefqSHjnTEMccX3rN23brateeef0GVSRcFNKMudCqxdVhs
OUhHyqdT+zLRXppRp7Z0WNuwPD3nvDHtTo4QlVJGRwL8aOwzdFju2FY6kmgn
0pE6n2bkaV8fe//000/J3/ptn6Z7pEffd2Ecw3X/tdU2qT8j/v//tulfuC/z
gYdm1fJlzqOPV518kYPal7+QjiSySEfKp1P7MtFepCNVj/JU9GXK6kjg2trf
P/PBbr+V1ZHYY/vgrIfTPd+sc0+aPCW5b+YDyaZNxWe9Tb9rRhrcPadjLhpf
+zshxnesQT23+1z/CtNuua32d99eYZ+OtHHjxuT26Xcl4ydcloy9cHxy6+3T
U3uBsrA/5eZbb0/nEpdMmJj6emjWuXDY/8+b/1S65x4/KOyT4fsVrYHjo8Py
BnuFENhysjeD6/nmRbzy6mvpu7Mez1kQ7FNY+vwLwTMDQ2Mn9vRYmkNnmORd
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
D40xY9nn+fxAsH5p5xu4dsWcy2rvTNnwYe9OmvL8dGdhjTsdM2R8PFSpI7m2
FM3UkaquF63Ukdz9ULG+Q10/lr6y2xd0pGbUsVi62R79899+s80Og3lono9K
swPaZc+903+7vn+LNKCisu3aPrAmEYOdTU5olo5U9ffpJB0p1K5VpY1Yu05Z
LHOWex5V6EhVt1dV60guXV1rUnshyjn75tzxIWcoNoLZWGHDQVrQlqxPdbUh
V3PCDyK445jYOb5LX9GRqhy3lKEdOlIrx6fg1mH6kBD0edaeZ+dOZfKhlWOx
bv61ljxbKk/duKij9u58w0apQkdy05R3RlIW12+9jVuMVupIVacdpCN1Nvhu
mTJlSq6GNHXq1Lr8wDVCJ/nZLkvReNb1o593TnAW6qTd41uj7ys6kjvGrGru
XIS1s9jRV4X5D+GMZHsH/BryN56Xd56Je2YYZy2HYFxi1+PbxCXU37j+GNFQ
isAHWGhuVsU8r+p60UodyT3zKvaMVTtPGj8zvv0AfUFHgmbUsVjMh7T5hMY3
pW+M7eL6tKBMuu1VUR9ZVLY/3rCh9lvsuU52hg2hWTqS+1sV36fdOlKV7VpV
2ojbrtdzRn2WKnSkqturZupILugUnJW74y671+IInaFQBPblFg9zZ/ww2b+z
Z4CMHnNh+nfbw8bcin9n/a/F0ld0pCrHLWVoR1/W6vGpW4efeDI8F3Jt5Nw9
X1AmH1o5FnPHXr7zacpgOnMVtp9V+UeyNGHnHIPrRzW75tRKHanqtIN0pM6G
dbBly5bl6kgvvPBCJWtlZeEsQStX2RA6Z7BKWqkjMQazs293GzQkeE4qHHTo
Yen1Pr870Fd0JHdNo575fFlsjRXNJ3TOXCyvvb689g6cJ4p9qOn6RWfFumeW
MlYOgd9Fuz5rMx3qb1xfhaF6ZuOqvPkWVKEjVV0vWqkjdXX9dbY3840Q7hnz
eZpGX9GRmlHHYnH9Y7NWZnledC6MO9aZ+cBDyTEnjIqaL4ZsYex8KOxSfGdu
uri2MoRm6khVfp9260hVtmtVaSOuZnP/zAeDcXG2H3PtvLPKqtCRurqqba9a
pSMZrgbIfrt6obybzSL75OxsPZ8P/sefmFurv+jJ6Gn82+dPNoa+oiNVOW4p
Qzv6slaPT9067Du7JQv5b9dn9eEy+dDKsZhrw1JvXTJM08Qnos9XgAvzXdpZ
gu/8g6p0JPQ8iyerTfswv44EtG2XVutIVaYdpCN1Ptg83nfffT00JP5m/gTb
ATZHjE3onwn8f6vskIxW6kgw8fIro/tSt5/OrjEYrm0Xc58q4Fwhi3P16q7C
a6vSkTZ98UVtvEqcIb+N5B17VVj/iOnrsrj7wIs0HsDvHHbwzE2L+ij6Jxvj
sHbJ3MGeUbRehy9ge3f8+RbZQTP+Zaxr8XZ1ren2e6i/cX9nnTlvPM+ZVXb+
a15Zhtiy0sp60UodCdAZbAwTOt/b7Z/z/G82Q0fae78D0vhYzy+iyrF3M+pY
LNQ3e7bZBKbtzjvvFt5nfjDoi7bq1z9KlwiVbff8d75t3roNeWBjcgvN1JGq
/D7t1pGqbNeq0kbcdQT2Shbt/eEsQDurmf2VPmLrcKj9q7K9qiqvVqx4M7n+
xmnpmW15+07T6xx/+BMmXRF8ZhH47iYe8sN8Rl826coe19E/2zlj1Dl7PjZM
9VBlXXHPmMvzv1iW2DFlleOWMrSjL2v1+NStwzy3aP8k38HaeULWF37ZfGjl
WMz6W/aXuuek+nhq0dPJ+AmXpdpmto3gt1o9CPjapkzbtT59v0ydKqrLrs0j
9ndFZYb2n/UcrkXHy17bah2pyrSDdKS+wdq1a3voSGsDZ2JvCbRaR1r/0cep
bm/9A+MnH11r1tbGu1yX1V0MtGJ7Xsy6RQzu2kZoj0BVOhLg599+Z+6W1/9i
62PXYX/5008/xb2YA2N668PIX/zh5uH6vc2eqZrF/E8QJza2/H9o3QwumTCx
9oyTTj0j97qx4y6uXefzERHT31i6CKwjZNv9D1evTnbdc3C3+WyejhRbVlpZ
L1qtI82dv6AWB/NF7Ap8cA6YXUd9yZsvNUNHsr0Z6Rh+TX67X+XYu1l1LAb3
TCULzDtCtreTJk/pdg/hhWUvFt4TKtt85z0G79ttnJstI+vXf5SeWczv5u+b
0Ewdqcrv024dCapq16q0sXHbda71rdtxn3tOWZ7fotg6HGr/qmyvqsorN81F
+pA7RoixgSnCbfst5O2Vs32xtXHHn/MlX1vyyScb03qJDo2/fx+xeYYGwXoU
8/M1BWN1vmEa36Ah0X6Kiigzpqxq3FKGdvRl0MrxqVsfCIcddWxuPaU9tutO
P7unj+Oy+dDKsRh+B+137H/zzmNknsZ3sWuz60G0J0OH/aWP3zXjXm887DO3
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
CdvbrF/uvLUTIYQQQgghRD5oSZw1lT2HKhv67TAw9WUqhBBiy6STdST3DFzO
l0NXEkIIIYQQQtQP59xwZvSo085Mhg0fmewxeN/k2BNPTiZNnpKewf7JJ/Wd
TSOEEKJvsOTZpamWRODswk5ixYo30z6OM+XkW1sIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC1MP6jz5O
HnviyeTJefOTf/3rX+1OjhBCCNFRrF23Lln24ktp+Pnnn9udHFHAm2+9nX6n
115f3u6k9Hm++uqrWr34/PNN7U6OEKKXo760OShfO5vvvvsuOeucc5Nd9xyc
3H3Pve1OTjdGHnlM8v/+tnUy6YrJbXl+1XlTZV1BWxs0ZGhy3EmnJB9v2NBw
2lpJJ4/ffvjhx1raP/r443YnpyGYq/AezF2EEH2Tq6Zek/ajhE5vs/o6B488
Iv1Ou+01pN1J6fM8u/S5Wr2YPefRdidHCNHLUV/aHJSvnc2Me++vfb//3Xq7
5IvNm9udpJQn585L07Ttjjunek47qDpvqqorv//+e7LDzrvX4pp4+ZUNpavV
dPL4bdX7H9TSfuO0W9qdnIZgrsJ7MHcRQnQOy99YkYy5YFwaVr7zbuG1nT5G
mzzl6vQ9r73+xpY+t0weV4V0pNbRyeMQ0fk8/MicWvvy448/tjs5vYajjz8p
GbL/sGT/g4Ynw4aPTA4ecXjaLh4y8sj0vwcdelgy5ICD0jXdVtPpfWkr2ZLG
KAb1+NXXXk9eWPZi8t6qVe1OTstY+tzzte83cLe9kl9//bXdSUptdbABIk1X
TJ7atnTE5E276gptqsV17/0PNBRXFXz9zTe1fHj8ibmF13by+E06khCi3bDf
29qhRU8vLry208doe+0zNE37AQcf2tLnlsnjqpCO1Do6eRwiOp+Lxl9aK3/f
fPNtu5PTK8B/ySUTJibnjr0wGXXK6cn/bdO/lkf9d9o1Of3s0ekcY9LkKW1J
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
QzpSPO3Skcw+5/+26V94hmxVuDoSZ4CE+n/GuZZ+5i0uXV3V9TvuPtyYuGz/
Z9oOBXQkOPzo42p9GmvK9Ef8m3fL02GFEM3BtYGY+cBDhddW2e+4+2dDe8/x
BcD4Fn832fO4y2BraTvusnvhddYm5c1fXdy5MfaiPmLzmP3Ndl3R+SOMcW0d
oBmaA2sUNrYM9QHuuzVbR3LHZWiBRdqP60uQ4NOROHPdfi86I8o9D76sjtRb
vmkerdRi3PVa5mhFPlcZg9k+eEJX15q2ph1ft5Z2nhva10O7gT8RymxWi65a
R7IztgnslSyCc5dtnJt3zhr13z2HpRN1JNc3EppYFbi2hSEd1P0mZXUksLO/
sKsI+Wpw9ylkfbpDVToSbTlzFX7DzqPojKesj+VGdKS+PkahHzMfzQTmSD5c
H3u0jVVQZV9vuD5T3Lrn1snsGZZG0XiB+SLrR4zPJky6ojCt+EOzeBYsXFR4
bR7ff/99rc0/5Yyzou4x3/7cN+7if5/FNXTYcO+1/J3fzx17Yc1+ivvziBlL
tauu9DYdybUHDZ1jVqWO5PpVu2Ky39ezgd6Kn+rpd97dw6ddLK6ORLj19umF
17t+sX39YpX9Dn70rC6Yj3kfjKVsbmbjqxDuebiMsazMoLULIVoL4x+rj6G9
DlX2O9jFm19H/Ax/8KG/HWWM5fq4jbGRzINxUm1e6jkz0mB+ZWMr2kBsJn0Q
h+1z4LqVK9/xXhebx5yRYNflnRVHm+u+B6EZmgP7u7mfPWR5axzky7Y77lw4
tqx6DOHaEOH3NTtvZuzHuIzfzW8lwacj4YfTfmefSlfXmm6/M27l3Ac3r8vq
SL3pm/popRYDrk0Z84o8XN8ap555Tq9IO/7d7XfsUfJsFV3/7pQr1wcWVK0j
2R4JAut6Rdg5wwTmpdk9Jtg4uPtn8uptb9aR3H2ohNeXv9FQfL54Kbt5e2uZ
v7n+ZurRkVzbH/YEYQvigzPG3bbJp61XpSMB50jY75yvg82gmw/kEX00+xzc
9rcRHamvj1HYb2q+/4rmQuxls2tiz5qIoaq+HpjX2rtwjXsW+McbNtTGS+hg
vHeW0HjB1bfz9CHWIFhnsuuK1m9C2Lza9Z1dhNte1/qKq6/1XuuuY8WMS2PG
Uu2qK71NRwLbS8m+giJ/jFXqSDzH2gLmBEUa5nkXXFR7bqxOmSWrI7GPMk//
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
csZZudfhl2PxM0uSa667Ielas7aFKWw+0pHaS0hH6tSyd9H4S2vv9c0337Y7
OX2WjZ9+WsvnSVdMbndymsbkKVen77jdgF1SXUkIIYQQQggh2gHr9zYHY+/E
loh0pPYS0pE6FelIrWFL0ZGwE7X3lJ8kIYQQQgghRLtgPmJzE3xtb4lIR2ov
0pFEI2wpOhL7Of++3YD0PY889oR2J0cIIYQQQgixBfHll18l0++akYbR542t
zcHGXDS+9ncC55gZv/32W+3v+Ktx+fSzz2q/PTLnscJn//zLL8mdd9+TXjvj
nvvSePNgDxPXXTrx8mTsheOT2+64M3lmydLkl1/K+cfZvPnL5L6ZD6RzTN6R
5y5/Y0XtLLpm6EjM+ebNfyr1ZXLeBRclV197fbJw0eJ0zluGr7/+Onlw1sPp
npZzz78gmTR5SvoumzZtCt/sSdP8BQtrabr0n5OS26fflby3alXwXrQe+8b8
P5Cvt94+PTnnvDHJiaeclix5dqn3Xr45dm9Trr4uOXfshclNN9+aPPf8suT7
H36oxV2kIxWVPXj1tddrv1t54oyr+2c+mJYd3nXaLbcli5c8W/vmMfzww4/J
k3PnJTdOuyUtN/idv+6Gm5IVK97MvYfva2k5ZOSRtffi+fb3kA+fbNm5YvLU
tIw2Y08f+fTSy68k0++8O/UvdNmkK9P66fpGc+Fb2nvMefTxqGdQ16hzlNsP
PvzQew3fpatrTZo3vC9pIa8pr7///rv3HvKIdJBPls+HH31ctzbMymoe9bYx
vvpAOt/4s2xQvqlbCxYuSn03ZeFMyHvum5lew3tSh94oKFMuo045vfaun332
edQ9QgghhBBCCNEoq97/oMfZbL7gzm3wE1zTm/6c+7jgv2bkkcfUfn/xpZdz
n8182q6bfPW13mvQr/DV5DtDjjBo3/1THSIE8zrmpFv16++N54STT0vPlK9a
R5o1e07Nd7kvoLuE/C6jJVx+5VXJVtvu4I2Dc8vQNdA6Ynho1uzUR3Vemo46
7sRk7bp1ufeTL24e4Vdrm/4DusXB3DgLuqKdWZ4Ne+0zNFm9uiuoIxWVPeAe
+51rV7z5Vo+0WTj08KOSD1evLswr4kBP2GHn3XPza8gBB3k1ETStUL06eOQR
uc8uKjv//fd+qd6B9lMFjz72eG754lljx13s1VOGDR9Zu2bTF18En4O2Y/F2
da3p8Tt6JOUvL7/2GLyvt00puidUnxttY7L14ZNPNnrrF3k084GHut33t37b
e59JfofqM3qcXb/gqYWF1wohhBBCCCFEVaAXHHDwoWnYba8htXnJ7nsPqf2d
gFZghObyzM05743f9z3wYK8NAbYati+DeZrPVyy6gpsmAvP54Ycd2UMbwE4k
D+a/7to9Ydc9B6d6lzvfQ1fA3qcqHcl84VogTw4ecXiy34GHdJs/Dh02PFn/
kd9WAp3giGOOr13LXJdvw3x80JCh6dzUfjvgkBFB2yTssNw07bjL7smIP/OB
NLgaG+dBvb78DW8c7rwZbYj0uPER7r3/gW73YJfhPnf7nXZJv+Pg/Q6szd/5
m+v3pVEdCY2UtFi54XtnyxO6FvqhDzTRk049o9v1vOsxJ4xK9xJZ3AT0no83
bOh2/8qV79Tqj52vReD729+xK/PhvodpEAceMjLV21y9g/Ibo9/kwTtOuGxS
t2fhu/nk089KtZl+/QfW/o7WkrXhcrWM7DfPQp23tPPts6x8591klz337lbW
eedTzzwn1ers7+hdr72+vNu97BskP93r+OZuG5a9B6poY9z6gJ5Dmvl/8m7E
EUcn/QfuVvv9f/6+baqDoTFS36w+H3bUsclOu+7Z7Xno3kWgXcZeK4QQQggh
hBDNINY/UmguD9ffOK12zYx77+/x+9nnnl+bK6IdZEH7GbL/sFoc4y79Z/LO
u+/V5rHMf59e/EzNToT52bvv+fdksSemZlswZGjyyquvdfsd+4Gjjz8p/d2d
xzaiI7HPx+JhPjp3/oJuZ9Szn4V9SnbNcSed4o2HvV92DXqPq+fBunXrU1sq
u+bYE0/OTRP2LXbdznsMSs89c0GzuvKqqbVrmNeyly6LO2/m3ZgPY1vGOxl8
H4N5c00D+PNatCdXj3Cf6+Z/ozoSGgu6S9Z+Bb3CLVt5fnTumnFv7Rq0hmw8
7JtDW7Br0PbyKOMfCdsgV59iP5e7J4p8tvpDOOOc0YXxFcH+SouHvXfs03O/
DfterW4Q2D/mgv0Qdc/KZxHs+7J4XLscoLygg5pmRt5/sXlzt2vIB9NN0ad9
+xLL+Eeqqo1x6wN1Bn2c+2xfJfGxP9Cu2XbHnVONiWfzPDcP2MtnGjzPy9tT
CGjvtbbhiKML31UIIYQQQgghmkGVOhJztH2GDqvZNzAfNdBx3LmbD3d+Pn7C
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
G7t36uuee+/PTpl9Rt4OzzjrnLyt+OccAz6mPCPsrI+feVL+rvixfT91JMrP
edGTGDvxb2IHxIKt95VXX5u/i1ZG3s1+UtVOyY1F3VGH1CV1GuO/23bMji08
18avhOfOveO3yvysCnQFK7OPmXbh3y4p/k7b6ZVu23c/dST8qO0ezdcLHxv7
W1nfWVUe8oxin3jEMcdmx848Mbvm73PyWBhtwdeS7xsaB+2FOnvu+Rdanyfk
73Ouz++HMlr5d9hl9457pX/z8Nz5O/1qE3XH9rOP+uqrr3LblVNPOyP/Dlx8
6eV5LqkqXaib9u7fa2IlxZSJesB+Mm/rs0/P6/+zz5r9nvtVV7xnTz39THb5
FVfl7fbEWafm/trvvfd+9Dna4r8P9MUxMIax31B3VfB+xei+4wHiStFemnyb
eL+tbTF2qoNzcRzn9pT1t4w56csZg9E+zznvgjy+T913pwz/LjOmtfN88cU/
an/X69i+2+v2AjoQNnpWly+9/Erlsf/4x5f5eIb8ysSxE0KI8UBqHYnvHmMG
7xvsN2I3PvzIo5W/9+N/voXfffddHjvFn6ONvYOHsSlj/v9ZaUJp2VgzY+2B
a6bg5nm35j46Zddaf+NN8roP7zekbv5FvD/+/v9+v3L22eefN5aH+Yjd59Kl
Hw7bjxaw34HTO+LU+A0/8Ucfe6Ly/OG98A2efuhfSs+1wsoT8nk6tkOpQRO0
6+DflgLGdsQPq2rX3E/Z8zNo83Ys//7yyy/zGKZl51pr/Ul5nI8mGD8Rf7eq
TGh36Lb91JHQQrgPIB4r12DcFcOtt92ex0KnnWy74y5FGd97v7/rp2E7pY6o
q6p6pI7rxqqxGsknn3yan6vq/cL/47Irriz9LePuqvLZRiz5bum1ffdTR2IN
ounew7KVlQdtsKrfn3nirKh+Hy0enbSqHLvttW9pzIxYiIXUdK/hXIvnzt/X
3XBy4/nrju1HH4WGj65iGnO48e0qa/PdtPdYGzTKhE5aVSZyvREX6Pvvq/vK
ftQV/WFdPTHXblrL6QbGInadWE2VPvt3K69WlK1KZyauEsco12yWtymr57p1
PKsztrq4zH7szrk9YX/LekhV30L+RzTdJpreZWIAoRtW2eB0O7bv9bq9YLkG
8+tMmFg5XmV9gj4Ve76mNRchhFieSKkj3Xn3PR0aDb5FaB2sJ3pNn3EH635l
+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
wsoYtI7Uax/FGMH2N+XLxCYMvzC2MjvXVDrS9EMOK/aHthkhvPPm94MdREg/
+nN0AfSWKtrGQ47B62X42MfCt937RVmuD9bi6CcYS7LmhIbBhm7C38d7/iqf
G89/Aw2LKY9NuMVzQzsM8T5ynDPE97dNtvX4/tuxrCuEkD+Vfax1YxtXB7+3
c5HD1dN2bJ/qut3i5zW0XZvXMGcxfYl1BcbXQggxkvg1y6ptpOySvI4UuzHu
8XhtISaeJGM0Oz5cJ/bfmlQxktvgY7x0Y4tNzhf7Pf5tTfhveDc6EmsxFj8R
+94yyBFn5wjjdhAX3fbF5MFjnF+00cCW3T87xkN18E0u1tMS6j0+NlJVDIJ+
gD5icTyIGxHi5x2zzzy79lxeiwzvgXG61Ruxq5pg7uH9/FLqSMzliethENPE
roOPWxmMabEVNyiP3Q/r2yOBb6fUTcz8jLq2uV6Yf6nuHfXjW/qGJphnmX2G
xS8PGUQe9Kb2PZp1JOxhmjDfCDT1EPKy2bnq4gEZzGPs+JjcX2UMWkfqpY/C
7sR0OXxBeyWFjsS+tvkkzb+NuSL2QJ5UdQX4ktp+8vSNFNhp23V5t9vEC/D9
GttLEe+F+I+NsPn0kyfYw3jTtDns28zely1sf4ybrW2W9TG+v23STL0mFeZK
pd+39YNw3F8Fca85PrRtbzO2T3ndbvFrcPQFvB/E2aMfYU3I9pl/vhBCjBS2
Xlm3Na1xpcLrSMSA5tvWtIU+yNjdtJkjYM9r39Ltgrg+sTlXUsC3amhoce7b
jE2CX0NlC2OYxOBtrcJvfxl+PNqNjgQ+RufQ4uG5giy2CXF+w/VAnqX9lvEE
16jb8Ee349EPPf7ZsZbUBLZtZW2gW8LYSN4OOTVoCWhq1BlaIPGS7brUd4h/
zk35uXmGVfMK4g7ZviofnBDzaUypI1lspHvvu7/jb3adMm2QWO6s45G3zPC+
JnV+VSnx7ZS6icH7YYaxn+reUe8zFcYlq8LHHSlbsx0JHalt+x7NOlJMX2Q2
IegfIRYjg3kN8XOa+kjiANq1y9b3Yxi0jtRLH+XHFDH2W02k0JG68d/3bTaM
UZOqrgD93dv2MMfGf7bJBqNXvH/0tOl/bvVbvzbFN1c+a/GYzRF58jysy/F3
1iqwn2SzNRaz9zLMp7Bqvc633ab8kd5nObQj9uM9ciw09X1s5mMWzmHajO1T
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
jnMccPDw2Hnkdd/vwOnZ/11hpdLrTtpks6gxBt/SnXffq/QcbOSNjok/0Wud
2riJ/wJjxap74/tKPNYQ5gVV9+HruIxbb7u9I25rWH7mHb2Os3jWjNl8jptw
m7z5VrVjgX7pSIzvmurOnk1deW69/Y68vsp+v8see0fpH6nadh3he8dckjlh
1b0z34/RDJhDn3zqaZVtidxBjN3QEpvotU0yTkfvqLon8nkx1m2qnzLbgFBH
ohzMAcqu81+/XyWfA9bFQY3VkdBytthmu8p72m2vfbPF7/YWD8W/R/yb+fGe
+04rvd4KK0/Ix/x14/ywb6M+/TlW+8Paw36Toh3F1mnK963uO8DGnK2sHdR9
g/yzKKvXJpsNNBJsYarOu/GmWww7tyfsK5jvTT/0L5XtgT6+af0FvXXdSZMr
y7T9zrtF6a9l0C7sPG++Vf0tISavHUf7rsK/65zbU9XGuvkWl/U56Gtlv6Wt
osMyXiqjqf8Kx3DMo1easGbptf60w87Z2++8U1k/dYy372rTGCRFvXdTp2Gf
Tr7H8LqMOWPvI8V41dPLODx23Nf0/Cf8YZ3s8SeerC2nEEIsT/hvEt+//1lp
QjHGWGv9Sfk8KdSR/G/Y+DYzL0EH8v0rOT4++/zzxuuiITEPsOsyJp26/U7F
32y74KKLS8/lxzunnnZGPl+1/+c7x30wZvVwTcYX/vxoE1w3/DbW+ZwQp3Tt
DTbqGJtRF/sfdEiuZxRj49/mMnVr/Snq1H+XH1jwYDFmWm+jydm2O+2af+P8
NfbYZ/9h52Bdl/kCm7UFxvX2N7Zw3ox+wHjUn3vVNdfO9j1gev5dX3nCstzZ
fIO7XZvkOnvvf2DHdbi3XffcJ9tptz2zNdZepi0xD/tg6dLaekqtIzGvsTry
dY2maX/HHqKuPIzvrN5pV9v99tzCOSXjIXKSV5GqbTcRzg159+z/eea0uY02
3bxj7E57rnougE664657dLxPPGPsKiZNntJxrs232bbSpiRFm8SOhbmoPwfz
VjRpxue+LKxN1tVPjI7kcw9jf8Cz51n7959nWOV7EKN53Hv//Ox3K6/WcU/U
K7mO0VXsb7TBXsbD/j2iL6K+fB/Gva2zwcYd5cD2tUrT830bsVDtN5SZ89DH
e1K1o5g6Tfm+YTPlj+c5bL3tDnkf4p/blC2n5mv3Htbv6WP8d4dy+L47/AbF
6EjEGLc+yb6pW07dLrdjWGWNtTq+WazLlxH2FeiG/Bt9lHvjHkO9DzuHKtCH
fX1QPrQAbCJoC75td5OvnjZr56C9lYHO5e+f8lfZI/g2y7k9VW2sm29x2OdQ
h/Zs6It5D32Z2dAly2ijI9GX2feXNsf7Hb4TrAfG2PSFjLfvahsdqdt676ZO
fblY16U/tf+nDGw+32AbHanb8WpxPz2Ow2PGfWXPn74mb0u/fdN8P1jXdwkh
xPKE/yatuNp/NJe77rm3Y73T26wzfivmA799h7EX9esE5Do4+LBl64xVOTT9
dRnr8V/mod7ehrkd3yvGTnZs2XqCH+/Y9/zQI47O15es7P4emKtM3mzL4jes
1732+hvFXJJj+a6ZzQtj3TIbcI5jDmLfDsZ04ZiV+rHvIzmky+arqerUvsto
f3wv0VfCuQa+YH4cOf+BBaXngtiYDPhb2PmYW+Bb5u/zH//4Mh/j2zH4X3QD
9Wvn4HsetgVsR/waLnPGMkZrfCTmRWgdaBeMWTyMfTbYeNPinPhXlZGqbcfg
3zvKxtiNOg2fP22QMaAdy/y+yg8GnzE7jrEka56eJUve67BrwXamjBRtEj8b
24/dUmijg52CzUWYo4Q+R210JBsD05+Ez57nt9Wftl92rmOOLb3nJs2D8tvc
m+fO++Q1Pex38Clgn43nY2y+yvDvkfXv1HdoH4KflO1nwwehDHtH6NfoT3mm
+P2YzUrYnlK1o6Y6Tfm+zbt12XeA7xjfYZ+/i++At1fbfe/9Ss/TJj5Sk46E
LYPNv63NeK2P+sd+6verrlnM38rmaf5dYM7FcdjX4stucK/YM5puyngEf9IQ
bAJsTIDeir+pH69wHq9pn/DXWbV1UMaPP/5YXIN2WwZ2fX5OyfbEk0+VHmt2
EpyTc3titMpu4iOhH/Cu8C0KbTlunHtzXr92LH6/dedq0pF4ppQx/CYzv/fv
R6/xusbDd7WNjpSi3mPr1JeL/om2jB+cz2/m++FYHanX8WqKcXhTWXn+f5yy
rD5Zzwy/9/g1+rXMFyNiLAghxFjHf5Ow/6mLv8BYxNYI+G+d75C3pWZOV3dd
trr4Raxx2nGsqYVzBj/eYavyuzK81oCffBV802yNlPXX0M4enaoYVxw3s/I8
Z5x1Tm7/gL3BJ5982rEvZZ3ad5mNeWeV3Q/23XYcZaoiduzq52xV7YexP/fH
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
XnLZFfm6aNnvmHcS4y/8/qWu00HqSMD6D+et0naoH/KIdAt+6d4ew2+sg5P/
mxiKxMG0v48nHakfbbuOjveuIodYiI+ZSUxKw8envO2OO6POxbjYfuPzDXtS
tEnyZlE/3r7Jb+gfZbnF2+hIMb694H2NwnLX9eU+93HbrZsc1v49Cu0zqvC2
amFs7Nh3JHU7qqvTVO+b/w5gb9orqXQkazN8B2LZ7n/1SuxsPal1JMB/jDjw
dmy4UYa6ePIx+HfUx/y2PN9eq+Tf/A19y3Q3r5tXrZdJR4pnPHxXpSMNJ2a8
2u04vKms/vmH8bmFEGK8E/tNImaBzaP22m9aPiZqs4X+z/662AU0wfq0XT+M
Cdlm7NQR8+Ghh1vdQ4xt/9DQ4jx2NuWwsaZt+x90SF/rdNA6koF/A7Ym2BaT
4918Hexb3k18BMYIfr0JPxDmSMzxyeXrfY18POLxpCP1u22H+PeuKm96iF/b
9f5S2BfY36tyv4f4PI5lz9mTok1+9vnneXvDlinUZdadNHlYXJs2OlJdDiAP
69v2mzBPT11fbvorc9y2/UyZRtaEf4+q7DBCzGaKPjG0f4l9R1K3o7o6TfW+
ca/2HWBe3yupdCRrM5Qt1rbH4neRc9zTDx3JoP6I7UhcPPxbsJ/y7yZ2ib2A
TxvnIY4WLFr0ZnFurw3599n6ZtNpQr84j3SkeMbDd1U60nBixqueoaH4cXhT
WX2uvpjYgkIIMZ5o802ysR3z+ZTXjVkzJJaKHR/aCrcZO/nvKr7u/YSx99yb
bsnWWHuZ/X0YFzFlnY4WHSkEncfnUGqKs1rGc8+/UPye+U1VLm/wecvHk440
km0b/Hs3aZPNon7jfZeGhhYXf/c5mspy+5ZB7Fv7TVlevjpStEl8qIjlbOeo
i//fpCPZHLUJv9Yazu3r+nL/vje1xxT49yjWxoZ89xy/5jrrD9sX+46kbkd1
dZryfbO5Tux7VEcqHcnnekI7aQK90Y4n3p+nnzpSCDHQ0BBNK8YWsZvYuwY2
T/l5Vp6Qr2dZHgdiNIVY3Cb6adY2frfyavn/c44qpCPFMx6+q9KRhtNWR/LE
jMPryupzKvdq3yiEEMsbbb5JNu8iH3ZT/os21+Ub0QTfATve25dDm7GTz2U8
UrnFfP4w7DE8Ket0tOpIwPjbYoqzvt02J7Mf5zXl8p41+/RxqSONdNv27x1z
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
EEIIIYQYPA89/EiuJbGRX0EIMbYgd5O9w3fdc++giyNGEUNDi4u28erChYMu
TivIH33RxZfmOUMVW1sIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCxPLee+9n989fkD351NPZZ599Nuji
CCGEEEIIIYQYp/z000/ZE08+lW/vLlkybP/rbyzKtt1p12zKllOzx594cgAl
FGL8Mv+BBdnqa62X/Z/frVhsE/6wTvavf/2rb9fk3NYnvPX22327jmjHl19+
WTyXTz+VliiEEEIIIYQYDO9/8EExPz3tjLOG7Z82/c/F/s22mjqAEgoxPrn6
2uuy/7vCSh0aEttRxx7f1+v+8MMPxbWOOGpGX68l4nn4kUeL53LzvFsHXRwh
hBBCCCHEOKVJR5p95tnF/gMPOXQAJeyOm26Zl8+B2ZgXi/7wwosvFfW88LXX
B12c5YqJ603K37v/WWlCduzME7Onn3k2e/mVV3Mft26YffqZ+XM6+9zza4+T
jjQ6kY4khBBCCCGEGA006UjMKefcMDe77Iorc7+KscIxx55Q3NfXX38z6OIs
t9x2x51FPeODJdKwaNGbRb3ud+D0JOfc8I9T8vNtvvWfao+TjjQ6kY4khBBC
CCGEGA006UhjFelII4N0pP5w+x13FfV6/Y1zk5xTOtLYRjqSEEIIIYQQYjQg
HUn0gnSk/tCPepWONLaRjiSEEEIIIUT/+Oqrr/I1/FNPOyM7/KhjsosvvTzP
cdNWT1j87rvZ5Vdenc2cdUp26BFHZ2eefW4+v/vxxx+7KtMNc2/KY5Qc9pej
slmzT8/+Puf6qBzezz73fF4Otl9//TX/G3mUiF1EHOx99jsgW7r0w9Lf/vTz
z7ltw+lnnpMdduTR2QUXXZw9+tgT2Xfff5/vb9KR2G/XLsvdxLnZx3+N997/
IPvbJZdlM46bmes5V159bfbSy69E1ZPx0UcfZXNvuiWvc+r+hL/Oyi69/Mq8
PJW/+fjjoqzbbLdTcV8X/u2S4u++nGX4tkN9nXPeBdld99ybffHFP1qVP4aP
P/kkW/DgQ9l5F1yUX4v6p4188015O12y5L3iPsj/HsPd99yXx2u+bs4N2Vdf
f116zM8//5K98urC/L5nnPDXbMbxM/PnR7urwspx6OFHLtMcjjm2+Ltvq1UQ
7+eiiy/N28jxM0/Krr3u+uy5519ovKey9+H773/I59m8V2ecdU5eP9xXyNDi
d/P2QKxq7vWav8+pbVPd0s37/o9/fBlVr21ydb340svF7yZMXDc/H3GX/PnC
51ylI726cGEeW4nyEK+JuiOfY1u6fe4xlLUN3ifa/wknnZx/D3j+Cx56uDHn
nfVtPMcm2hwLvg74vtx62+3Z2++8U1umtjpSt30Z9WZ1+MijjyU7lufw1NPP
ZJdfcVXerk6cdWp2xVXXdB3vSwghhBBCiBT88ssv2Smzz8hWWGX1YTmO2P7f
71fO4/w08cknn2b7TDuoNFeS5d2OOY+V6eRTT6ss03+vuGo+p2UeXAX6gh3P
HI8Y0uF5Fr351rDf3TLvtmzNddYvvS62Ce+8M9SoIzXNXbbebsd8H/8F5pZV
9cbcoUrLMNCCmFsSW7jsHJwb3ey7774b9lvmkGW/8ZuVM6Sp7ay8+sT83lLk
W2fuNeuU2ZVl5FpobyHEp6K9cMymW2zTeB20QruftdafVFr2hQtfy9adNLmy
LNvvvFv24YcfDftdUz1bWy2D2NxbbLNd5e9222vfXMOtInwfHnr4kaJe/LbS
hDXz+zPQQMquRx0xD05BL+8773BMvaINxXL+hX9rPF/43pfpSGhuVe/jzBNn
lb6PIb0+9xjCtoF+TTsou96fdtg5126qsL5t3Q0nN1439timOsBWrErXjNWR
eu3L2tijxR6LTlb3XT5yxnGluq8QQgghhBD9hHnMLnvs3TE+XWWNtbJtd9o1
10wYq9rfD/7z4ZVzXOZya2+wUce8b/JmW+bzacufZBt2Mv/85z8ry8T66467
7tEx51pvo8nZDrvsnk2a3FmmzbfZttJWwc+NsCUyjYXzoQ8wLwh1JOyOfFlX
+8Pa2dTtd8o23nSLQufhb6yLV80noY2O9MCCB4t74j6pezQ3X4499tm/sr7Q
mNbZYOOO+cUmW2yd7bnvtNy+aMXVls0Hd959r9zWyoNmwDyMzV8XzcX+jm1I
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
XsG27ubdb3bPeJ6QZJKZzMzzyPdzXbnEZzJJJpNJTu7c5z6SpE5R35V7W+oJ
L1iwcLk+AlVxL0JsihwPYlDdxBGIedC3gD51tPO7GQO6Drb51ddeb+2LdrVu
hwPuz+iDRk2rBQu632b2PX2M2o0FF9bNmGl859xfUnekKO7VDfp20LeH+0P6
R7aLiRWhH1qIWbSrm122jJdefiX9zPPmvdPx5yX/gP38yaeftp2X75R9yz5m
vezz31ON3UH93qtatOjD5L358/s+PtZI/d7Z7gULFqb7rdu+VbyfukD89rm+
0O+tF5o6l3Gu4rzA77rTczHxMfqy8Xkfmf1o2p+36nWZ92ZrNEmSJEmSOkNu
QXi+XyXfTpIkSZIkSSsexl4KfZSozStJkiRJkiQF9EFjbDfGPYprgdEHUJIk
SZIkSQrG7zhpuXq11AHutAaYJEmSJEmSfn+++urrIeOA8e9DDzsyrYMrSZIk
SZIkBYydfseddyWXXXFV8rfb70zHfJIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkdeeLL79MHn/iyXRasPD9QW+OJEmSJEkrlK+//jqZ88yz6fTZZ58PenNW
SK+9/ka6/1986eVBb8qwNX/+gmTsuPHJ//vDKkOmt+fNG/SmSarp+++/Tw6e
MjXZYJPNk2uuu37Qm7PCef+DD1rX/Z9++qkv6/Q6Nzy99fa8ZMKk3dLr69Nz
nlnu9bLvrYn247JlP7SW8eFHH3W0DEmS1H/kdYR78ttuv2PQm7NC2m7izun+
33DTMYPelGHppZdfSVZbc93lYkibbL7loDdNUgeuvf7G1u/4f1dZI80zVP+c
fubZrf3fr3t3r3PD0+SD/9I6Frbadvxyr5d9b020H+e9825rGRdcdElHy5Ak
qReOmnZ8svmW2yRbbLNdsvV2OyTjxk9Mr4vb7rBj+u+tt5+Q7LzbHsu975df
fkkm7LxrOs/2Eyelz2t22vXP6d+22X5iMvvRx3qyvTPPOCs54qhjk3POu6An
y88yjjR4tq/LHXrYka1jdJ/JByUPPPhQMm/eO8nrb8wd9KYpsuseeydjthqX
3ouk59kJO6XHNufPcM4ds/W26fPnOl5+5dX0nMg09823erT13Xv4kdm/XWv+
dV3h84bPH/YB16DLrrhq0Js6cE88+VTrN73uhpum19tB++vfbm8dZz/8UO8Y
7cY3337bWu9dd9/bl3U2FUeqs8+8zg1PM886p3UsHDjl0OVeN45U3U8//5y2
S3j29dVXX9d+/4pyDXlv/nz7P0gaEbguHXnsccl+Bx6c/PfKq7WuV6PW3TCZ
evhRaZzpqmuuW+59tIkOO+qYIfkP/7XSqsmfxo5LDj3i6GTRh715hrfpn8am
6+Ja0Q/GkQbP9nWxf/zjH+lvlf3zx3XWT/9fw88///nP5PjpJydTjzw62We/
A5L/W3XUb+fadTZIDjjk0PRec8bMM2ov+86772kti3b2cMW59IhjpiUHH3p4
ei8QXzt4DhGuN8+/8OKgN3XgOF54FnP2uecPmzpnx0w7ofV9ffvtd31b75JP
Pmmtd8apM/uyzqbiSHX2mde54Ym27k23zEquuOrqtJ9alnGk9hYv/jh9xvU/
K68+5Ly//iabpfv2119/rbSc3/s1hNjauedfmOag3nTzrYPeHEmq7O9///uQ
e5vnnn+h7Xto36202qjkD6v9Mc0T6uT5Ql3GkVY8tq+LffLpp63jc8phRwx6
c1QBbeZV/rh263uj7kU3RkocKXbp5Ve2tnniv9r/Gv6MI9VnHOn3zzhSuWee
fS693u2xz/5pft6zzz2fXHnVNclmW27d+lzsw7p5uL+HawjPCMgfv+SyK5JD
ph6e3kuFz2QcSdJIQq5pOH9xzieuVIb6vdRfmbT7nslHixf3aSuNI62IbF8X
G8Q9lrrz6muvt76zlVZfM/n55+76LI3EONKe+05ubfOFF1866M1RBcaR6jOO
9PtnHKkY+Vv0yz3y6GnL5Up/9913aS2M8NkmH3hImodZVb+uIcR6etX2J0c5
5JLv8ue90niYcSRJI9HV117fOn9xfi5DjYKV11g7OeOsc/vSj+aVV19Lrrz6
2nQKfXjW3Wh0629ML7z4Uuky5s59M7n+xpuTU047Pc19pT1666zb0mtZmart
AK5/s/76t9b2vPnW24XzfvPNN8nNt85KTjv9zLSfC3ms997/QPLll1+V74gI
+33BgoXpd3HqzDPTPjEs5/4HHqqcI5wnfVb0n8/AmDVVtoNjh/lvmfXXwvmW
LFmS7p+zzjkv7fd4wokzksuvvLpSG72sncb7w/a++957pcupMy9oPzDvCSef
kraD6HP/6GNP1Lrv79X3dMNNN6fbRp2wcHzSJot/E4wjE2Mb+HtcY+TJp+Yk
00+akeacU2epCMcs3y95h+nvZ+YZ6TZ8/nn7Pvzxfg/fN5+d3zXtP46FBx56
OK2DkkU79LobbkrnYd/xDJL3jWQc9+E7232vfTteTtincX0scv7jY6Dd8wDy
/y++9PLk2OOmp/2buU954qmna7Xn6+K7X3XUb/lY1HfqJ3L46DN2/oUXp+df
YgYc2+2uBVm93Hd8b+E7pFZSFte77HfM9t940y3p+Yo+5xddclky+7HHu7pG
E8MJ66H+SPjOWHb4e7uaRdR24nzHuYrtCuf+dmNJ3nf/g23PcWXXDz43+47+
SKFPKbVuiLW2+110E0fqdJ/lXee4brKvpk0/Kb0Gcf7jnF0X+eUcq8S12Be0
haqMC5d37qadwnaQ/7rXfpOTxx5/ovH1tkOOS9iusjoyXJ/CfPfcd3/pMrkG
hXl//PHH1t/btRsGFUeiTUusgX3Lb5522McfL6m9/CbaOUXOu+CidLvZtnif
BuxP6mGEz1e1P1o/ryHsY+oW9gLfF7/xIB5fgf5+kjRSxGNS0O7KQ9vr5FNO
S8eGeujh2X3bNq6dcT/ovIl2Xx7upePnFtmJfnlF70WVdgD3DbSN4+cqee1U
2tPEEshByNsW9iv3zO3a/bTjeHZR9Jk23nyLtJ3VCe47wnKmzzi17fysJ8zP
vVQWbWraj3GfyXiiDUG9mKVLlxauo6l2WtV5aZdSLyxu38TT6C22qtSW7+X3
xPOrdr8JcqVjYT/yXxCXiednmVkcs8Rei45Z+vFTj6AsJz3e7/ybthPPKLPL
oj5b/AyOeeM873jiWKubBz9ccO8VPgf3Y51q9/0zFdX2pc4pOZ1F76P2BPu/
Fzgnh/VUyX1tCuvh+UHRZ+b8y/1OO/3Yd3xvYXn8TrPiOAfzkuMW31fF0w47
7ZLWbe0E8ap2x1g4n+ThWU3ebz1MnB+LnleUnTvj80kW12Oey1CLt+h9a62/
UWlcoZs4Uqf7LHudu+Ouu4fUrIwnavYvWvRh223h/ppxT4q2gzj2wveL629l
z92M35A9zmizNL3edtg3YVnEporwWuv3PWrdwnMNba4119sonS87zmm7dkO/
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
+TnOmQgTfaHICwmfj791E0cC/cjDvNQLzMs74B6F63JeO4B9y/a2q6NIO4i4
SXYZ3O+TP8y1p+mcB9ouYT1lfTqy2H9xrkSYOP54nkxOcxNxJJbD8rL916iX
QE3VsC1VvkuWRXwxbpdml0m8tV39h358T72OI4Fnnjzbz4sn0Z4jRldmRYsj
8XyYc2rrXDvq3+fa9Hz7r+OeuD3nTXJbmkS+B/fQ8fEWznFZxJd4ns05J/ud
0r+A+Befo1OMTcmzcT4rnz9cb8I1h2fTHE95zy1iPM8Oxx19lbtBPgTXjbiv
RtxmP+Qvh1XKd+r1vsNwjSOF5cXjbtB2KOprRu4RY35mn0Gl1+AxY9OxravW
OeG74RiIcy7ILcmiPhV1GUO/3Hgip4F+kvF4er2OI6HKPms6jgSOVWLW2eti
uA6xP4v6SKHTOEi36+1EqK/NVNYniOs2uYLMxzHSLkYy3OJIYbnx8RQmtiW0
d9ppqp1TJs77azdxXMQ1mJq6hnSrl3Ek8o84NzK2Jfcp4f6KiX/zN15jniby
9iRppAljmjG2L+jf0811KYt2KvVv2vUL4jky6yZnt8k8nU7RZ5zajuSt0Lan
H2DduoEsgzYkNRC5h6xS+3xQ2FZy+fkOFixY2OgxkLcu+qrQ/6pb3HtSv5Xt
JgbI/3eyPSPleyrDvRd9MB946OF0X+Tl3GnwOL7ol9WuhiqIY/Lcl/sSxgAg
76PTZ8+9wLaF+4xux4wLeBbP5+QzP/X0nNKa2WWG+77rNfYbx1m78TjB/SHP
0zkHPj3nmbTvb6fXAGrusK/bLYPXuAenXxXnqyrb2Wt19lmT2Be0MWhr0Oag
7dHE9XG4rndFQbyaNi37t6v+lw20c36v+tmvTZL0m3T88A03TZ/R0r4m5kOf
NEmS2iHuEOJI3OdIktQvxpEkaTDI2yYndfLBf0ljStTqK6s9IUlSEMaKJLe/
lzmMkiRlkffI+D6SpP6jzgD5SNRRaapfgiTp9++AQ/5dC7asBp8kSZKk3x/q
dHRbd1SStGJh3DPiSNRWkSRJkiRJkvJQU498pIOnTG07joIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZLUL19//XUy55ln0+mzzz4f9OZI
kiRJkiRpmHr8iSeT//eHVdLpttvvGPTmSJIkSZIkaZgyjiRJkiRJkqQqjCNJ
kiRJkiSpCuNIkiRJkiRJqsI4kiRJkiRJ0vB0x513JVdefW06/fTTT23nX7Jk
SWv+J558qnC+uXPfTK6/8ebklNNOT6YeflQy49SZya2zbku+++670uW3iyO9
8OJLrfV///33pcuqMy+ee/6F5OJLL0+OmXZCcvz0k9Ptf/Gll9u+L/bzz78k
r78xN7n51lnJsSecmBx7/PTkksuuSLdFkiRJkiRpJDt15pmtuM0DDz3cdv5z
z7+wNT8xqKzXXn8j2XPfya15stNKq41KTj/z7MLlt4sj8d7w+ocffVS6rVXn
ffmVV5Nttp9YuM2777VvsvD990vXBWJnG44eU7icHXfZPfn44yVtlyNJkiRJ
kjQczZv3TivOceCUQ9vOP3qLrdJ5V/nj2smyZT8Mee2VV19L/mfl1VvLW3mN
tZNtd9gx2Wu/ycmW22yf/PfKq7VeO+uc83KX3+84ErGzP6z2xyHxntFjxiZb
bTs++d9V1mj97f9WHZU8PeeZwnURU4uXw/y77rF3+tnX23j0kGV/8eWXpdst
SZIkSZI0XG29/YRWrtDSpUsL5yPfJsRDjjjq2CGvffvtd0NycabPODX55ttv
h8zzzrvvJWO2Gtea55lnn1tuHf2MI5FjFGI/xL+uvvb65KPFi1uv//LLL2mf
tBAb22izMcvFzvDZZ5+n+455Rq27YTL70ceSH374YchyTjv9t7yvE06cUbrd
kiRJkiRJwxXxk1ZftbvuLpwvjoVkY0DUFho3/t99w444ZlrhMshZCsugdlBW
P+NIk3bfM33tv1ZaNbn7nvsKl3PPvfe1lnPyKact9/qs225vvX7X3ffmLuMf
//hHMnHSbmluEnGkf/7zn6XbLkmSJEmSNBzRzyrk3NAPKw9xj/U32SydZ8NN
x6RxkTwLFixM82/KrDpq7XQ5u/x5r+Ve61cciVyk8Bo1otoJMafV11pvudfI
WQrLevSxJwqXUaWOuSRJkiRJ0nC3z+SDWv27vv766+VeZ7yxECs5+9zzO17P
Tz//nIxaZ4N0OdRMyupXHIlx2cJr5Ei1c811v+Vsff7550Neo8ZSeI14U1GM
TZIkSZIk6ffg/gceasVCGLM+i75Y4fUFC9uPXRZ8//33yVtvz0semf1octkV
V6VjloXlUCspq19xJGqK83dyoz74YFH6etkU912jD19s6bJlrVwtpi222S65
9rob0uVKkiRJkiT93pAntMba67dyamK//vprsuZ6G6Wvjd9xUulyiBsRcyG/
if5v8Tho2WmQcaQJk3Yr3bay6aZblo+zPf/Ci619FE/UQ5p6+FHJgw8/kvz8
c3l/P0mSJEmSpJFi2vSTWnWnP/30s9bfn3xqzm8xlJtvLXw/9ajDuGXZaeU1
1k62m7hzctY557XiS4OMI43ZetuO40gXXHRJ7voYt4063OtssEnu++jPV1bP
W5IkSZIkaaSIx1JjDLfgyKOnpX/7v1VHJd98+23ue++57/40/hTev+seeydX
Xn1tWleJ+Eo8Phnxo37EkWaecVbhvKFuNjlE8955t9ZEXfIy1Ed69V/78oqr
rk4mH3hIGkOL40n0eZMkSZIkSRrpRm+xVRrrIHcI9Hdbbc11079RU6jIbnvu
04qT3Hv/A6Xr2GzLrTuOI51x1rmV6zTts98BhXGkKYcd0Xrt22+/K11Ot776
6uvk3PMvbMXZVlp9zdxa5pIkSZIkSSPJRZdc1oqvLFr0YfLQw7Nb/z/7scdz
3/P3v/+9lXOz3YSdSpdPPtN/r7xax3Gk62+8ufX6Y48/UbgetmmVP65dGEe6
4abfljPnmWdLt7kpcVzr6TnP9GWdkiRJkiRJvbJ48cetvJmLL708OeQvh6X/
Xmv9jdLYTB7qR4c40qFHHF26fGoodVNn+4knn2q9fuxx0wvXE8e/8uJIn3/x
RSueRe4VfdHKUBOJ2k7006PueEB/PdZFXaTpM04tXQbj1YXteeChh0vnlSRJ
kiRJGgl2+fNeaaxjw9Fj0j5Y/HvGqTNL37PXfpNb45MV9ROjZtDqa63XVRxp
yZIlrfgP8S5iOFn3P/BQ8ofV/lgaR8JR045vvU4tpTg+FPvr325vzbfuhpsm
P/7445DXiUO1iw8tW/ZDsvV2O7Tm++CDRbnzSZIkSZIkjSR/u/3O5cYae/Ot
t0vfQ+3oMO+W22yf5t7MffOttB8bOURnn3t+suqotdO8pVBvqZM4Eo6ffvKQ
bTvgkEPTuuDkDFE/m/gS20C+Ulkc6fvvv0822GTz1jzjxk9Mx1N759330ngV
uVPHnnBiWl88zHPTLbOWW87td9z125hs626YnHn2uckzzz6Xxo6WfPJJct/9
DyZbbTu+NU9ZnSlJkiRJkqSRZOmyZUPGGBs7bnzb99C3beqRR+eOdx8m4jt3
3HlXV+O1gRrVo8eMLVzP2htsnPbPqzK2G3/fYpvtSrc7TJdcdkXh5z915pmV
lkEOFLXLJUmSJEmSfi/imNCVV11T+X3U6aaWUjZ+wjhwzz3/QjpPt3Ek/PDD
D2k9ojXWXn/Ievbe/8A0nwhV4khYunRpWgsqzk2KY1/02Xv2uefbfnbyl6gz
nl0G+Uzb7rBjMuu229suQ5IkSZIkaUVDPtADDz6U9mmjb1cv0Qft3ffeS/uR
dYNa2+9/8EE6ftuDDz+SvP7G3DT3qfb2/OvzvvTyK+ky5s17p7A+uSRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkqTB++LLL5PHn3gynRYsfH/QmyNJGmYWLfoweejh
2ckzzz6XfP7554PeHEmSNEJ9/PGSZM4zz3Y9xf7xj3+0/v7ue+8N6JNpRbZk
yW/H9bfffjfozemp+fMXJGPHjU/+3x9WGTK9PW/eoDftd++sc85L1t1odHLk
scclv/7666A3R5JyPfzI7GTN9TYaco0Ytc4GaXtNQ7319rxkwqTd0uvq03Oe
GfTmSJI0LF159bXL3X92MsV++OGH1t+POOrYAX0yrciuu+Gm1jH4wosvDXpz
euall19JVltz3eV+j5tsvuWgN+13b968d4bsc57xS9Jwc+31Nyb/tdKqy10n
jpp2/KA3bViafPBfWvtoq23HD3pzJEkalowjaTj45ttv02OF6a677+16eStK
HOnQw45sfc59Jh+UPPDgQ2l84/U35g560373vvnmm2Sl1dds7f9577w76E1S
iabPMbFPPv00+dPYccmYrbdNtt5uh2Tc+InJdhN2SrafOCmdtpu4c7LN9hOT
Aw45tNH14omnnk7XvdmWWyejt9gqnfg3fyN+UNd3332X7LDTLq1lxcvc/6Ap
HW8neS8LFixM+1ORB/3Pf/6z1vsHuY/76fMvvkjeebfZPG5yJjlH/d+qo5Jp
009Knnv+heS1199I+7itSP76t9tb5wDaqUVmnnVO67x+4JSRfTxJktQrn332
efLKq6/lTtyThmvppN33LJyPKWYcSXUt+eST1jEz49SZXS9vRYgjcV82at0N
08/4x3XWt3/CAMx9863kjLPOTe+NNbw1fY6JcT9Obgdx3YmTdhvyjIX4y8GH
Hp4cccy05OZbZzW6XnDsHXv89GTKYUckG202Zsi6WW9dx55w4pDclfU2Hp0c
esTRyTHTTkhumfXX2sujPXDKaacnK6+x9pBtW+WPayczzzircr/jQe7jfvj5
51+S226/I1lr/Y06+t6KxHmT+x14cGPLHYk4hsO+KDvuOGZvumVWcsVVVydf
f/11H7dQkqTfhw8/+qh1za3zjM84kuoyjlQfz+fDZ+QeUlKxXsaRYq+++lpr
PX9Y7Y/JsmXFeQ9NI45C7tBKq41K17/tDjvWev+LL72cbLDJ5smYrca1PkM3
NQ6p40wfW3KIrrrmuuT5F15MY1G77bnPbzV61t0weW/+/FrLHeQ+bgrjIjz6
2BPJNdddnxw//eQ0ftRN/K8IuXdhuSM1xtaUqnEkSZLUHeNI6hfjSPX1675Y
+j3o1+/lsiuuaq1n1z327tl68pCXQ7+lEAciT7GqX375JY333HHnXcn/rLx6
+n76Q3WKfmt/3nu/ZOvtJ6R9QGPkTvIdxPXc6uR99GsfE5+69PIre1JD/977
H0i3n5gfffLoM9iLONKdd9/TWi61tldkxpEkSeqPpuNIb8ydm5xz3gXpM1Pa
utzrMy5GXfTtv/jSy9M2Ac/xrr/x5vQ5ajvEE6gHxfT3v/89/RvPWukLT13F
ffY7IFm8+OPG11tF3rbRhmUM9xkzz0jOPPvffWfIfc9ijPeLLrkszfmnTwL7
le+u6vq+//77RuYN9S94/nnqzDPT7/7c8y9M7n/gocJ2+H33P5gul+MiHDM7
7frn1vqY2n2WPHlxpJ9+/jl59rnnk8uvvDo57KhjktNOPzOZddvtydJly2ov
n33Otp1w8inJkUdPS+9reLac9/007Yabbm67z6h9UYT7Rb4T3s9+OOHEGek+
qTK+G99F9nv58suv0nstcqL22m9y8tjjT3T1+ebOfTP9bdEXZurhR6X3m7fO
ui2t29I0cgJY18mnnJael6697obk5VdebfURzPu8MY51Xsv29+E4C+97/4MP
2m4H67v62utzl5XV5PmPfXrjTbekxzHHAueR2Y893ngfSXLnZj/6WHL+hRcn
U488Ojn9zLPTz1n3O+3ks/fqHFOE30BYzyWXXdHYctvhWGad99x3/5BtaHd+
Dy68+NJk8oGHJE89Paf1XvqzdYrfQGgD5I0vz7mS3KewrgsuuqTysvu1jxkL
k3Vwjmsa9bq4joTfWtz/7JCp3cWRvvrq69axHdfQ4xwXH/fUNQg4J4S/P/Hk
U6XLbzdv3nmT93DdoW3AcUWbhvNn1eMziK+9tHm4Hr762uvp9T0P8eOwLdTR
CvuCc134e7ZeWrz9VfLxiJNyPqOfZnrN+lebje3KO+6zenVebuqcK0lSJ5qM
IxHfiOsZhIk6DNNPmpEsXbq07XK5v6OOZt5ymHbfa99k4fvvF76f62iYl22k
5mJ2GXm1crtdbxXZbeNe/H9XWWO5da06au30PjuI743iifq/tEuqrK/dPVSV
eWln7/LnvQr30cabb5FbQ6bsPWEillZXNo5Em4q6rHnLX32t9dI6CFXQ7qbG
RN7YN0z0KXnyqTm1t7cOcgza7bOieyviMetuuGnh+/g+yuIefBfx98K9D8dk
vAz2fSeIfe257+TCbeO5PcdiE4hr0tanT0zRb5rn1dnPm0UeAa9tuOmYIX+n
zR/eN33GqW23h99GmP/IY4/Lnafp8x/3XtnvLkzUWa7b1ygP90Vx3kl2YqxB
4mftdPPZe3WOycNxFe/TVzO1A3vpgYceTtfJvSvX1LANVeLD/ObpX8Y991nn
nNd6L9fITnEOCsvZcPSY3Lra8fWLXKoq+rmP+Q2wjl7EkbLiOFK3+Ui0Y9od
80xxbcs6eeTt5s2eN8k1o0Z63jZQf4t4Rzvtrr2j1tkgeXrOM8u9j+t/u/3A
ebxo+6lZVYRnMjzviMdbiCfacMS6yvpdNn1ebuqcK0lSN5qKI5GrwL//e+XV
0rYi10Lu3eNrW7v6LrSRs/d8o8eMTcdkjeMtjEeS15ZAfL3mXp95+TftEtoy
XF+zcaQm1ltFvG3EicJY7utvslnaxolrlLKttKmuvOqa9P/pg7DFNtsl43ec
lKw2augY8NzPtltft3Ekag2znWEe9if3fOTp008i/J22VjZ3gLwCxt6J51tz
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
OI4U7kWJU7A8ntWR60DeAnkJYT4+R1luSDyONjW5WQftR8Y9Ir+LWgOsI8yT
9+wR8bjB7K9O1emnQzwrfE+0Z9knPNMnj4H7RtrqcayJmtx5+R+9iCMRr4rj
OtSzYnvpx8Z+pR8kY+jRbg85Cd3EkaiF9aex44Yc+9Qo4l6W5Yb4KjG1uG9V
t3Gk+Hwapirxg0Gc/7qNI3HshNwApj33nZzcOuu29P6LOB15bxyzjNsVfnvc
s/fqswdNnmOCiy+9vLXMslhIVtyXlumll1+ptV7uSYlzEocqytUK+SVMzzz7
XO48xMTDMU8eR5NmzDyj9f2mv99R66YT13rGZ4zHk+J6VKTTfdytgeUjHXhI
Y8utE0fiuUY8bia/Pa5r5E8eccy0Vn+u+Jzd6zgS4msvtRavvf7G5LXX30i/
F67B/K7DWA1cK4piTfE1k3MGdSKJQfNbrLv9cRuD69JFl1yWHi+0fTg/cW6P
60Lm9edHU+flps65kiQ1YbjEkcK2FI0pn52KaifUjSM1td4qBhFHor0zeszY
ws9DrIR2Zbttox9XiFGUTdzvFOUEgbZXHIcpu39vJ27jLViwMD0Oy7aNe5yy
OlHguXmcy1I2cR9Q9Ow/fiaaHQO4jrr1Xjhe4pyeoon7tKLcgV7EkcgLCfk/
RRP3CHfceVdX47XFiBswtnY8Tlw87bjL7mmskc9YdhzWiSOB/j1hefxmWEcV
/T7/NVGHg9om2fEa8yZieNnas01/9qCJcwy/Dc7D3DeSg0nNobAc7uPoW8d2
ZMdlyuK8GW9DUZ5gjNw5+hGTrxLX7qK/KuvN5j8eetiR6evZ6zD1iNhG7tvj
cdr4LBwnVba/nfgYqjJddc11rfc2tY+71cs4Esu89PIr0xgZnyfuK0YOC7lB
fH7i6t2M71AnjgTiH0XnRSbiSu3aeE3Hkbj2ck1tdwxttNmYNM+3TNwnLUzs
+062//Irry7dV2HiN1UU623yvNzUOVeSpG4NpzgSeKZCmyt+Ph3fZ9I/5tnn
ni98fydxpCbWW8Ug4kjgu6KdzljM8edivONQi6DKtvFMkHub+Ply2D+bb7lN
2ielSl8EapiwP0MuONP5F17c9n1ZQ+JI/xmPju8w1BENE9vLsV2WhxSjzxvx
DOqQ5rXPyLtnPPeyWi7cM4T5eabaqU7qBpN7xP1J/Mw5TMQUiWvRD65IL+JI
AfdM8fPb1nZtsVWa14am4kjB+x98kK6XZ+3ElThGqDkcjtWm40izbvut/xW/
sTr6ef5rqs42OUOcX+K+nmEit4E+T/zm22nyHNztOYY+wLyXOA65D+QiEJ9l
4t+8xnnlyKOnlS6HfifketL3LN0XBfmLMc4d/HbjdbJvya1gneSCxrheUNuN
ZwYxxjtjO9PtH/XvZfFfPlNYFrHdbsRjHVaZ4jh+U/u4W72MI3HNITeEay9x
Mu7tiQEw8W+e43C94vNXOTaK1I0jgfEV6HMbX8/ZHuImXNv6HUcC6+UZTLgG
xBOxYY63qt8T57eNN9+i9X6O+bifa53tZ1+R+5MXT+K5waOPlT+favq83NQ5
V5Kk3yPaE9z/cR3lmS61E7Lt5N/TevuF9gdj+VCvslP0kaC/Be1V+k11uizu
sYhj0W+uXX3dusjzZvvoR9LN/QH7i+f63LvxbI//ryL0pcu2XfuJGrz072M/
PD3nmZ7s506RA8c+pU9bWf5aP8TjGtIfcTgYiech8gn4PXN/xn7MqwtdRZOf
vZfnmLro/0UcU8NLP/u1DUf8bol3MbbEoH8jAc9yiLfQT3P2Y4/njv9XFech
vmP6UHeLZb3y6mvJAw89nLYHutmuJjR1zpUkSdLwwHNe7k36WedDQ1W9J2Lc
vRBHem/+/B5vlVZU5DdW6dem/lrR40iSJEmSBo8+Y6HOZadjNKk7PDOmznZR
3eGAPJcwvhd9iToZh1Fqh1pA9B9asGDhgLdEWfTf4jxdNPaVJEmSJPUaNUBD
fgv9c9Rf8fiC1F4pGvv5o8WL0zELw3d1wokz+rylWlEw3hzjdEuSJEmSlHX7
HXelcYmx48YPelNWWNTVjmuPMv4TtdYZB+u0089M9pl80JDxBxkLa7jXH9LI
RE138hOpVSZJkiRJUhZjvRGz4L8anLvuvjcd96ls/CjG32H8oOFSX1a/P+N3
nJSOXy9JkiRJkoY3ap/Muu325MAphyY77LRLOg70hJ13TfsZMU7b3DffGvQm
6ndu6dKlg94ESZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZI0Apx59rnJ
tdffOOjNWOHcc+99yeQDDxn0ZkiSJEmSJFV2yNTDk+knzRj0Zqxw5s17J/l/
f1glWbDw/UFviiRJkiRJUiUHH1o9jnTWOeclfxo7Lhk7bnyyzfYTk2132DHZ
buLOyfYTJ6X/3W7CTskW22yXPPf8C7nv//LLr9LXN9ty62T0FlulE//efMtt
kqlHHt3R9h959LTWsuJljtlqXPL999/nvueoacen62Rbtt5uh2Tc+Inp9vN5
+PfW209Idt5tj+Xe98svvyQTdt41nYfPPGHSbslOu/45/Rv7Y/ajj9XadtY9
86xzOvrckiRJkiRJ/VYnjnTVNdclRxx1bDL54L8ka663UZpPw/Q/K6+e7LPf
AWks6NjjpiefffZ57vuXfPJJMm36Sel8xJzC+5nWWn+j2ttO37D/WmnV1jJW
Wn3N5JC/HJYceexxyWmnn1n4vgsuuiSdZ78DD07+e+XVWu8fte6GydTDj0rj
THzWrB9++CE57Khjhmw36ye2dugRRyeLPvyo1vZfc931yTobbJL8+uuvtT+7
JEmSJElSvxF36aRf2x777N+KpZxz3gW133/7HXel791q2/Gt5Sxdtqzy+7/5
9ttk3Y1GJ7vusXfr/TfcdHOtbfj73/+e/N+qo1rvL8qjihELW2m1UckfVvtj
MvOMs5Kvvvq61jpjvPd/V1mjdh6TJEmSJEnSIHQSRyJ/ZtVRa7fiLy+8+FLt
9R57wolp37ITTpzRWs68d96t/P5jpp2QnHzKackOO+3Sev/C9+vVGnr9jbmt
967yx7XTuFKZt+fNSzbZfMtk0u57Jh8tXlxrXUX2P2iK9bYlSZIkSdKIcPCU
qbXjSK+9/kYr/rLyGmundYPqGrP1tmkft8uvvLq1rKp5OcStNthk8+Tzzz9P
+9Tx3vU32az2Nlx97fWtde+57+TSee+6+970s55x1rnJP/7xj9rrKsJn5jN8
8eWXjS1TkiRJkiSpFzqJI8WxH/q31UV/Lt577/0PJPc/8FBrWdded0Pb9/78
8y9pPaKHH5mdPPX0nNZ7qVtUF3WewvuvuOrq3HnIUSLvabU1100eenh27XW0
w/LX3mDj5Mqrrml82ZIkSZIkSU06cMqhteNIe+03uRV/ueyKq2qv88GHH0nf
+/kXXwzpWzbj1Jlt30uNbPqC4exzz2+997bb76i1Df/85z/Tutrh/WxHFvlO
jMfGuG51+8zVQU1w8rMkSZIkSdLIt2zZD8nSpUsHvRk9UTeORG2k1Uat24q/
0MetLvJ7xmw1Lv13yE1iYvy0MsRyiP188umn6f9PmLRb67116xW98+57rffy
ebJ91V56+ZW0jjfj2fH999J78+en2/Hqa6/3dD2SJEmSJKkzt866LTnvgotK
53ngwYfSeAdjuzNtvf2EZN68d/q0hf1xwCH14khxbSTiL52MWb/1djuk9bUD
alyzvLHjxhe+h/wh6ltfe/2N6f//8MMP6VhnvG/D0WNqbwNju4XPsc9+Bwx5
7bobbkprFs2YeUbt5XZq/I6T0npRkiRJkiRpeFmwYGEau3j11dcK55l51jmt
OEM8USeHMed/L+rGkeLaSNn4SxXsO2Jy1EUKttxm+3R5jAFXhH5r203cuZU3
9PScZ1rbceTR02pvB3Whwvv5TPjxxx+TQ484uvV3/t0vt8z6a3ps/fTTT31b
pyRJkiRJKkccYrsJO5Xmmtx40y1pHIF6zvz7mWefS04/8+xk3Q03Tf9+yWVX
FL73iaeeTnNmeN/Nt85K4wNM/H+2xg59uq657vrkqmuuSyfGD2NdVdxz3/1D
3kcOTSeoNV0njhTXRiqqTV2G+ti8Nx6fbJ/JB7WWyT7J4m/Uon7r7Xmtv8W1
kW6/465a20Bu05rrbdR6P/3JPvhgUZoPtc4Gm7T+/n+rjkq+/PKr2p+xE99/
/32y0uprJnffc19f1idJkiRJktp77vkX0v5QX3+9fLwCiz78KH39iKOOTX76
+echr1GXhzwmauYUYcyxo6Ydn4weMzaNRTBW/NTDj0qOn35ymgcVmz9/Qdq/
a/e99m3FLvh3O8Sawnj3G202Jjlm2glpXCWLMeWJhT362BOFy6oTR8rWRsqr
Td0OtbSpWx07acZppcuceuTRaS3qWFwbafHij2ttQ1wbie/zgYceTlZfa720
btO3336X/ju8XhYzbOf9Dz5Ic6jOPf/CSvMz5lyV71+SJEmSJPUHNWgmH3hI
4evEfHb5817peOx5uM+nTk87jClGHIL4UTt33n1PsuMuu6fzb/qnsaXzEtti
+7bZfmI6P2OfFQnxqbLx6tnOqnGkeGw1+qB1Uhtpq23HJyecfMqQv5FTFZZ7
3/0PDnltzjPPprEy6iEF/DvE0TqpjXT9jTcPyTkilhTnARHrCq+z/GwN7qqI
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
S2usvX4aw1u06MMh9a6yqIdOftMXX37Zx62UJEmSJEl1cc+/1vobpXEXahV1
6scff0zr4Oy82x7psqjjwzjueX3i+BtjujEe/Kh1NkjrYMdjdIXxyG6ddVvr
b7xOjhTxqTBuGGPQ5+W4vPzKq+k8xLTouzdh511L+8AZR2pWqElOPJDv55Cp
h5eO87f/QVPS70CSJEmSJA1vjDsWaiIxjlsnQh0g6jFTcydM5Jjk1cf509hx
rXo/vIf5iCUEt91+RxpjCnWj6cuWLv9f72G5/DfU9WF8tizeR+yIPnPbbD8x
efyJJ0u33zhS804/8+w0H4m4IvXIizB23f+uskaakyRJkiRJkoa3M846tzV2
V9l47iPRgoXvp3lS7RhH6g3yx7788qvSea657vq0hvevv/7ap62SJEmSJEmd
Il+HOBLj2q+ojCMNDjXVZ551zqA3Q5IkSZIkVXDCyackm/5pbJq7s6IyjjQY
1MgihrkiH3uSJEmSJGlkYSy362+8edCbscK55977rK8tSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZL+f3twQAAAAAAg5P/rhgQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAACYC89vojw==
     "], {{0, 479.}, {585., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144., 144.}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{585., 479.},
   PlotRange->{{0, 585.}, {0, 479.}}]], "Input",ExpressionUUID->
  "5336327c-fc0a-4e2d-9cc9-4e0ed34a6589"]
}], "Section",
 CellChangeTimes->{{3.838974345404307*^9, 3.8389743522648897`*^9}, {
  3.838974713626889*^9, 
  3.8389747219169483`*^9}},ExpressionUUID->"01d77aa6-bf6a-4dc9-bcaf-\
62880e8d43c0"],

Cell[CellGroupData[{

Cell[TextData[{
 "For a given set of {spin, M} values, generate a set of wave-functions ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[CurlyPhi]", "IMj"], "=", 
    RowBox[{"|", 
     RowBox[{
      SubscriptBox["IMK", "j"], ">"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f33d5016-4203-436a-8b85-37308b329c3a"]
}], "Subsubsection",
 CellChangeTimes->{{3.838974355709633*^9, 
  3.838974404229529*^9}},ExpressionUUID->"3652b8cc-573f-47bd-8c65-\
51dbb0f1e138"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global*`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.838974439454801*^9, 3.838974454986451*^9}},
 CellLabel->
  "In[207]:=",ExpressionUUID->"2f63c0dd-69cc-4907-b2cb-408ebc423eee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Constants",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.838974687977956*^9, 
  3.838974694657048*^9}},ExpressionUUID->"c152163d-07db-4038-adbf-\
ba0a7760f534"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"(*", 
   RowBox[{"The", " ", "spin", " ", "to", " ", "be", " ", "tested"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"spin", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Euler", " ", "Angles"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"angles", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Pi]", "/", "3"}], ",", 
       RowBox[{"\[Pi]", "/", "5"}], ",", 
       RowBox[{"\[Pi]", "/", "7"}]}], "}"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.838974738043171*^9, 3.838974792722197*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"2a31fafa-58eb-4176-993d-399e2de4bd50"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Generate the M and K values based on an index running from 1 to 2I+1\
\>", "Subsection",
 CellChangeTimes->{{3.838975022686911*^9, 
  3.838975039518786*^9}},ExpressionUUID->"4a81a205-830c-40de-bf1e-\
9eac77124ffc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"projections", "[", "spin_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"-", "spin"}], ",", "spin", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mvalues", "=", 
   RowBox[{"projections", "[", "spin", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kvalues", "=", 
   RowBox[{"projections", "[", "spin", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.838975040572195*^9, 3.838975060157436*^9}, {
  3.838975102141841*^9, 3.838975128839899*^9}, {3.838975267409082*^9, 
  3.838975322854985*^9}},
 CellLabel->
  "In[210]:=",ExpressionUUID->"3f6791e4-0e94-44ae-9227-4211a9f7c15a"],

Cell[CellGroupData[{

Cell["\<\
Create the set of states with the same M, and the same K, respectively\
\>", "Subsubsection",
 CellChangeTimes->{{3.838974532950985*^9, 
  3.8389745486374483`*^9}},ExpressionUUID->"51645b94-b298-4320-900e-\
02c9516a8137"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Kstates", "[", 
    RowBox[{"spin_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"spin", ",", "m", ",", "k"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", 
       RowBox[{"-", "spin"}], ",", "spin"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Mstates", "[", 
    RowBox[{"spin_", ",", "k_"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"spin", ",", "m", ",", "k"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", 
       RowBox[{"-", "spin"}], ",", "spin"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.83897442191882*^9, 3.8389744246364727`*^9}, {
  3.838974459667161*^9, 3.838974505968628*^9}},
 CellLabel->
  "In[213]:=",ExpressionUUID->"32e11fd9-eacf-43be-9c4a-c72b7509b4c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Create the mathematical implementation that calculates the Wigner matrix \
element \[ScriptCapitalD](IMK)\
\>", "Subsubsection",
 CellChangeTimes->{{3.838974651484524*^9, 
  3.8389746748301077`*^9}},ExpressionUUID->"4d1b3027-63a4-4b87-9576-\
6f332a6e4cc5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"wdreal", "[", 
    RowBox[{"i_", ",", "m_", ",", "k_", ",", "angles_"}], "]"}], ":=", 
   RowBox[{"Re", "[", 
    RowBox[{"N", "[", 
     RowBox[{"WignerD", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "m", ",", "k"}], "}"}], ",", 
       RowBox[{"angles", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"angles", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"angles", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wdtable", "[", 
    RowBox[{"states_", ",", "angles_"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"wdreal", "[", 
      RowBox[{
       RowBox[{"states", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"states", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"states", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", "angles"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "states", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.838974796036912*^9, 3.8389749422961283`*^9}, {
  3.8389754428800383`*^9, 3.838975451536096*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"8846187e-2749-40f9-ace7-7d925df63ab8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Create tabular data points for the Wigner-D functions with all the possible K \
values, at given M\
\>", "Subsection",
 CellChangeTimes->{{3.8389756654541187`*^9, 3.838975685943778*^9}, {
  3.838975953002898*^9, 
  3.8389759585943623`*^9}},ExpressionUUID->"104eaa90-98ca-47cd-9bb0-\
3f47076a3557"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"wdDataPointsM", "[", "m_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"wdtable", "[", 
         RowBox[{
          RowBox[{"Kstates", "[", 
           RowBox[{"spin", ",", "m"}], "]"}], ",", "angles"}], "]"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"wdtable", "[", 
         RowBox[{
          RowBox[{"Kstates", "[", 
           RowBox[{"spin", ",", "m"}], "]"}], ",", "angles"}], "]"}], "]"}]}],
       "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t1", "=", 
   RowBox[{"wdDataPointsM", "[", 
    RowBox[{"mvalues", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t2", "=", 
   RowBox[{"wdDataPointsM", "[", 
    RowBox[{"mvalues", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lp", "[", "data_", "]"}], ":=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"data", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotMarkers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "Medium"}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"lp", "[", "t1", "]"}], ",", 
   RowBox[{"lp", "[", "t2", "]"}], ",", 
   RowBox[{"PlotRange", "->", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8389761035610943`*^9, 3.838976221544248*^9}, {
  3.8389762530747833`*^9, 3.838976305406011*^9}},
 CellLabel->
  "In[217]:=",ExpressionUUID->"48f017fa-3677-45a3-9fb5-542de4379af5"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       LineBox[{{1., 0.025261081545427295`}, {2., 0.23862998037232572`}, {3., 
        0.5211240509241569}, {4., 0.11024575140626314`}, {
        5., -0.5211240509241569}, {6., 0.23862998037232572`}, {
        7., -0.025261081545427295`}}]}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        FormBox[
         StyleBox[
          GraphicsBox[
           {EdgeForm[None], DiskBox[{0, 0}]}],
          StripOnInput->False,
          GraphicsBoxOptions->{DefaultBaseStyle->Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}],
         TraditionalForm], {0., 0.}, Automatic, Offset[10]], {{{1., 
       0.025261081545427295`}}, {{2., 0.23862998037232572`}}, {{3., 
       0.5211240509241569}}, {{4., 0.11024575140626314`}}, {{
       5., -0.5211240509241569}}, {{6., 0.23862998037232572`}}, {{
       7., -0.025261081545427295`}}}]}}, {{}, {}}}, {{}, {{{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       LineBox[{{1., -0.16466785463028852`}, {2., 0.36721378103418023`}, {
        3., -0.27261229850292346`}, {4., 0.11352227000083767`}, {
        5., -0.028780446120923057`}, {6., 0.004092824527804399}, {
        7., -0.00019376041616544907`}}]}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      GeometricTransformationBox[InsetBox[
        FormBox[
         StyleBox[
          GraphicsBox[
           {EdgeForm[None], DiskBox[{0, 0}]}],
          StripOnInput->False,
          GraphicsBoxOptions->{DefaultBaseStyle->Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]]}],
         TraditionalForm], {0., 0.}, Automatic, Offset[10]], {{{
       1., -0.16466785463028852`}}, {{2., 0.36721378103418023`}}, {{
       3., -0.27261229850292346`}}, {{4., 0.11352227000083767`}}, {{
       5., -0.028780446120923057`}}, {{6., 0.004092824527804399}}, {{
       7., -0.00019376041616544907`}}}]}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.8750000000000002, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->Full,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8389763014951897`*^9, 3.8389763057197657`*^9}, 
   3.8389771796491137`*^9, 3.838977839143634*^9},
 CellLabel->
  "Out[221]=",ExpressionUUID->"16d3fd40-98a7-40d8-9d7c-d18e98251d93"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"totalMdata", "[", 
    RowBox[{"spin_", ",", "angles_"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"wdDataPointsM", "[", 
      RowBox[{"mvalues", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "mvalues", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.838976335076006*^9, 3.8389764205571003`*^9}},
 CellLabel->
  "In[222]:=",ExpressionUUID->"2b204dc2-0478-475a-b96f-3b67945bb353"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"createLegends", "[", "spin_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringTemplate", "[", "\"\<|IM>=|`` ``>\>\"", "]"}], "[", 
        RowBox[{"spin", ",", "i"}], "]"}], ",", "Bold", ",", "15", ",", 
       "Black", ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"-", "spin"}], ",", "spin", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"createLegends", "[", 
  RowBox[{"spin", ",", 
   RowBox[{"mvalues", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.838977403018511*^9, 3.838977405634543*^9}, {
  3.83897744968382*^9, 3.83897745005433*^9}, {3.8389775606946783`*^9, 
  3.838977677188568*^9}, {3.838977741209412*^9, 3.838977788038773*^9}},
 CellLabel->
  "In[223]:=",ExpressionUUID->"0e66a2e1-a3fe-4236-9e6a-cf91bf6ce9fd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   StyleBox["\<\"IM=3 -3\"\>",
    StripOnInput->False,
    LineColor->GrayLevel[0],
    FrontFaceColor->GrayLevel[0],
    BackFaceColor->GrayLevel[0],
    GraphicsColor->GrayLevel[0],
    FontFamily->"Times",
    FontSize->15,
    FontWeight->Bold,
    FontColor->GrayLevel[0]], ",", 
   StyleBox["\<\"IM=3 -3\"\>",
    StripOnInput->False,
    LineColor->GrayLevel[0],
    FrontFaceColor->GrayLevel[0],
    BackFaceColor->GrayLevel[0],
    GraphicsColor->GrayLevel[0],
    FontFamily->"Times",
    FontSize->15,
    FontWeight->Bold,
    FontColor->GrayLevel[0]], ",", 
   StyleBox["\<\"IM=3 -3\"\>",
    StripOnInput->False,
    LineColor->GrayLevel[0],
    FrontFaceColor->GrayLevel[0],
    BackFaceColor->GrayLevel[0],
    GraphicsColor->GrayLevel[0],
    FontFamily->"Times",
    FontSize->15,
    FontWeight->Bold,
    FontColor->GrayLevel[0]], ",", 
   StyleBox["\<\"IM=3 -3\"\>",
    StripOnInput->False,
    LineColor->GrayLevel[0],
    FrontFaceColor->GrayLevel[0],
    BackFaceColor->GrayLevel[0],
    GraphicsColor->GrayLevel[0],
    FontFamily->"Times",
    FontSize->15,
    FontWeight->Bold,
    FontColor->GrayLevel[0]], ",", 
   StyleBox["\<\"IM=3 -3\"\>",
    StripOnInput->False,
    LineColor->GrayLevel[0],
    FrontFaceColor->GrayLevel[0],
    BackFaceColor->GrayLevel[0],
    GraphicsColor->GrayLevel[0],
    FontFamily->"Times",
    FontSize->15,
    FontWeight->Bold,
    FontColor->GrayLevel[0]], ",", 
   StyleBox["\<\"IM=3 -3\"\>",
    StripOnInput->False,
    LineColor->GrayLevel[0],
    FrontFaceColor->GrayLevel[0],
    BackFaceColor->GrayLevel[0],
    GraphicsColor->GrayLevel[0],
    FontFamily->"Times",
    FontSize->15,
    FontWeight->Bold,
    FontColor->GrayLevel[0]], ",", 
   StyleBox["\<\"IM=3 -3\"\>",
    StripOnInput->False,
    LineColor->GrayLevel[0],
    FrontFaceColor->GrayLevel[0],
    BackFaceColor->GrayLevel[0],
    GraphicsColor->GrayLevel[0],
    FontFamily->"Times",
    FontSize->15,
    FontWeight->Bold,
    FontColor->GrayLevel[0]]}], "}"}]], "Output",
 CellChangeTimes->{{3.838977667265876*^9, 3.838977678154562*^9}, {
   3.838977748734619*^9, 3.8389777939617977`*^9}, 3.838977839181966*^9},
 CellLabel->
  "Out[224]=",ExpressionUUID->"7facdc06-5428-4b7d-af45-b92d430d05b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"totalMdata", "[", 
    RowBox[{"spin", ",", "angles"}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", " ", "Medium"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"createLegends", "[", "spin", "]"}], ",", "Right"}], "]"}]}], 
   ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Inset", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringTemplate", "[", "\"\<I=``\>\"", "]"}], "[", "spin", 
          "]"}], ",", "Bold", ",", "Red", ",", "20", ",", 
         RowBox[{"FontFamily", "->", "\"\<Times\>\""}]}], "]"}], ",", 
       RowBox[{"Scaled", "[", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", "0.94"}], "}"}], "]"}]}], "]"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.8"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(K\), \(i\)]\)\>\"", ",", 
      "\"\<\[ScriptCapitalD](IMK)\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"19", ",", "Bold", ",", "Black", ",", 
      RowBox[{"FontFamily", "->", "\"\<Times\>\""}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.838976423737123*^9, 3.838976626689005*^9}, {
  3.838976704374414*^9, 3.8389767637421713`*^9}, {3.8389776931889772`*^9, 
  3.838977715281352*^9}, {3.838977761764599*^9, 3.838977774993907*^9}},
 CellLabel->
  "In[225]:=",ExpressionUUID->"df0de257-406d-4e46-af2e-98d00c73e3cd"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.16466785463028852`}, {2., 0.36721378103418023`}, {
         3., -0.27261229850292346`}, {4., 0.11352227000083767`}, {
         5., -0.028780446120923057`}, {6., 0.004092824527804399}, {
         7., -0.00019376041616544907`}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.5627991059678531}, {2., -0.3454832727635421}, {3., 
         0.49558300661884086`}, {4., -0.19136638615493579`}, {5., 
         0.011364216885283803`}, {6., 0.0147483155804113}, {
         7., -0.0048120316839726255`}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.22180450714867894`}, {2., -0.2191337527660741}, {3., 
         0.012292941646063033`}, {4., -0.28920202988667426`}, {5., 
         0.33350115634193866`}, {6., -0.1503716566215855}, {7., 
         0.03052470804632278}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., 0.025261081545427295`}, {2., 0.23862998037232572`}, {3.,
          0.5211240509241569}, {4., 0.11024575140626314`}, {
         5., -0.5211240509241569}, {6., 0.23862998037232572`}, {
         7., -0.025261081545427295`}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., 0.03052470804632278}, {2., 0.1503716566215855}, {3., 
         0.33350115634193866`}, {4., 0.28920202988667426`}, {5., 
         0.012292941646063033`}, {6., 0.2191337527660741}, {
         7., -0.22180450714867894`}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., 0.0048120316839726255`}, {2., 0.0147483155804113}, {
         3., -0.011364216885283803`}, {4., -0.19136638615493579`}, {
         5., -0.49558300661884086`}, {6., -0.3454832727635421}, {7., 
         0.5627991059678531}}]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.00019376041616544907`}, {
         2., -0.004092824527804399}, {3., -0.028780446120923057`}, {
         4., -0.11352227000083767`}, {5., -0.27261229850292346`}, {
         6., -0.36721378103418023`}, {7., -0.16466785463028852`}}]}}, {{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               DiskBox[{0, 0}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], {{{1., -0.16466785463028852`}}, {{2., 
         0.36721378103418023`}}, {{3., -0.27261229850292346`}}, {{4., 
         0.11352227000083767`}}, {{5., -0.028780446120923057`}}, {{6., 
         0.004092824527804399}}, {{7., -0.00019376041616544907`}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], {{{1., -0.5627991059678531}}, {{
         2., -0.3454832727635421}}, {{3., 0.49558300661884086`}}, {{
         4., -0.19136638615493579`}}, {{5., 0.011364216885283803`}}, {{6., 
         0.0147483155804113}}, {{7., -0.0048120316839726255`}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], {{{1., -0.22180450714867894`}}, {{
         2., -0.2191337527660741}}, {{3., 0.012292941646063033`}}, {{
         4., -0.28920202988667426`}}, {{5., 0.33350115634193866`}}, {{
         6., -0.1503716566215855}}, {{7., 0.03052470804632278}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[
                
                NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                  1, 1 - 3^Rational[1, 2]}}, {{0, 
                  1}, {-1, -0.7320508075688772}, {
                  1, -0.7320508075688772}}]]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.922526, 0.385626, 0.209179], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], {{{1., 0.025261081545427295`}}, {{2., 
         0.23862998037232572`}}, {{3., 0.5211240509241569}}, {{4., 
         0.11024575140626314`}}, {{5., -0.5211240509241569}}, {{6., 
         0.23862998037232572`}}, {{7., -0.025261081545427295`}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[
                
                NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                  1, -1 + 3^Rational[1, 2]}}, {{
                  0, -1}, {-1, 0.7320508075688772}, {
                  1, 0.7320508075688772}}]]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.528488, 0.470624, 0.701351], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], {{{1., 0.03052470804632278}}, {{2., 
         0.1503716566215855}}, {{3., 0.33350115634193866`}}, {{4., 
         0.28920202988667426`}}, {{5., 0.012292941646063033`}}, {{6., 
         0.2191337527660741}}, {{7., -0.22180450714867894`}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[
              CircleBox[{0, 0}]], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.772079, 0.431554, 0.102387], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], {{{1., 0.0048120316839726255`}}, {{2., 
         0.0147483155804113}}, {{3., -0.011364216885283803`}}, {{
         4., -0.19136638615493579`}}, {{5., -0.49558300661884086`}}, {{
         6., -0.3454832727635421}}, {{7., 0.5627991059678531}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[
                Thickness[Medium]], 
               FaceForm[], 
               LineBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}, {-1, -1}}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.363898, 0.618501, 0.782349], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], {{{1., -0.00019376041616544907`}}, {{
         2., -0.004092824527804399}}, {{3., -0.028780446120923057`}}, {{
         4., -0.11352227000083767`}}, {{5., -0.27261229850292346`}}, {{
         6., -0.36721378103418023`}}, {{
         7., -0.16466785463028852`}}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     0.8, Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.8750000000000002, 0}, DisplayFunction :> Identity, 
     Epilog -> {
       InsetBox[
        BoxData[
         FormBox[
          StyleBox["\"I=3\"", Bold, 
           RGBColor[1, 0, 0], 20, FontFamily -> "Times", StripOnInput -> 
           False], TraditionalForm]], 
        Scaled[{0.1, 0.94}]]}, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"\[ScriptCapitalD](IMK)\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(K\\), \\(i\\)]\\)\"", TraditionalForm], 
        None}}, FrameStyle -> Directive[
       GrayLevel[0], 
       Thickness[Large]], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {19, Bold, 
       GrayLevel[0], FontFamily -> "Times"}, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.8750000000000002, 7.}, {-0.5627991059678531, 
      0.5627991059678531}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       StyleBox["\"|IM>=|3 -3>\"", Bold, 15, 
        GrayLevel[0], FontFamily -> "Times", StripOnInput -> False], 
       StyleBox["\"|IM>=|3 -2>\"", Bold, 15, 
        GrayLevel[0], FontFamily -> "Times", StripOnInput -> False], 
       StyleBox["\"|IM>=|3 -1>\"", Bold, 15, 
        GrayLevel[0], FontFamily -> "Times", StripOnInput -> False], 
       StyleBox["\"|IM>=|3 0>\"", Bold, 15, 
        GrayLevel[0], FontFamily -> "Times", StripOnInput -> False], 
       StyleBox["\"|IM>=|3 1>\"", Bold, 15, 
        GrayLevel[0], FontFamily -> "Times", StripOnInput -> False], 
       StyleBox["\"|IM>=|3 2>\"", Bold, 15, 
        GrayLevel[0], FontFamily -> "Times", StripOnInput -> False], 
       StyleBox["\"|IM>=|3 3>\"", Bold, 15, 
        GrayLevel[0], FontFamily -> "Times", StripOnInput -> False]}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.17900000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.17900000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.17900000000000002`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.17900000000000002`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.17900000000000002`] -> 
                    Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    CircleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.17900000000000002`] -> 
                    Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    
                    LineBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 
                    1}, {-1, -1}}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.17900000000000002`] -> 
                    Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 19, FontWeight -> Bold, 
          GrayLevel[0], FontFamily -> "Times"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}}]]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[
                    CircleBox[{0, 0}]], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[
                    Thickness[Medium]], 
                    FaceForm[], 
                    LineBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}, {-1, -1}}]}],
                     ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"19", ",", "Bold", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.83897642754356*^9, 3.838976491293702*^9}, {
   3.8389765588732*^9, 3.83897662695927*^9}, {3.838976743642007*^9, 
   3.8389767643995037`*^9}, 3.838977179788899*^9, {3.838977775766576*^9, 
   3.8389777968433437`*^9}, 3.8389778393555727`*^9},
 CellLabel->
  "Out[225]=",ExpressionUUID->"d3d4bd0e-b747-4391-b426-e385168410bf"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create partial data plots for certain values of M", "Section",
 CellChangeTimes->{{3.8389769370056677`*^9, 
  3.838976945135249*^9}},ExpressionUUID->"4e13fb3f-3111-45cc-b5a3-\
1d69d4cc5a6d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"partialDataTableM", "[", 
    RowBox[{"spin_", ",", "angles_", ",", "mleft_", ",", "mright_"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"totalMdata", "[", 
       RowBox[{"spin", ",", "angles"}], "]"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "mleft", ",", "mright"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.838976949143766*^9, 3.8389769745326443`*^9}, {
  3.838977092186304*^9, 3.838977133090513*^9}},
 CellLabel->
  "In[226]:=",ExpressionUUID->"0b3b3ab8-57ed-4a0a-a297-bc24f0466325"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"partialDataTableM", "[", 
    RowBox[{"spin", ",", "angles", ",", "1", ",", "3"}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", " ", "Medium"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"createLegends", "[", "spin", "]"}], ",", "Right"}], "]"}]}], 
   ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Inset", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringTemplate", "[", "\"\<I=``\>\"", "]"}], "[", "spin", 
          "]"}], ",", "Bold", ",", "Red", ",", "20", ",", 
         RowBox[{"FontFamily", "->", "\"\<Times\>\""}]}], "]"}], ",", 
       RowBox[{"Scaled", "[", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", "0.94"}], "}"}], "]"}]}], "]"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.8"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(K\), \(i\)]\)\>\"", ",", 
      "\"\<\[ScriptCapitalD](IMK)\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"19", ",", "Bold", ",", "Black", ",", 
      RowBox[{"FontFamily", "->", "\"\<Times\>\""}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"partialDataTableM", "[", 
    RowBox[{"spin", ",", "angles", ",", "4", ",", "7"}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", " ", "Medium"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"createLegends", "[", "spin", "]"}], ",", "Right"}], "]"}]}], 
   ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Inset", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringTemplate", "[", "\"\<I=``\>\"", "]"}], "[", "spin", 
          "]"}], ",", "Bold", ",", "Red", ",", "20", ",", 
         RowBox[{"FontFamily", "->", "\"\<Times\>\""}]}], "]"}], ",", 
       RowBox[{"Scaled", "[", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", "0.94"}], "}"}], "]"}]}], "]"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.8"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(K\), \(i\)]\)\>\"", ",", 
      "\"\<\[ScriptCapitalD](IMK)\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"19", ",", "Bold", ",", "Black", ",", 
      RowBox[{"FontFamily", "->", "\"\<Times\>\""}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.838977148745565*^9, 3.838977183867241*^9}, {
  3.838977279628808*^9, 3.8389772873985853`*^9}, {3.8389778222535887`*^9, 
  3.838977836953684*^9}},
 CellLabel->
  "In[227]:=",ExpressionUUID->"a967843c-c13f-45d5-92c6-9bcc984f5e4f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.16466785463028852`}, {2., 0.36721378103418023`}, {
         3., -0.27261229850292346`}, {4., 0.11352227000083767`}, {
         5., -0.028780446120923057`}, {6., 0.004092824527804399}, {
         7., -0.00019376041616544907`}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.5627991059678531}, {2., -0.3454832727635421}, {3., 
         0.49558300661884086`}, {4., -0.19136638615493579`}, {5., 
         0.011364216885283803`}, {6., 0.0147483155804113}, {
         7., -0.0048120316839726255`}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.22180450714867894`}, {2., -0.2191337527660741}, {3., 
         0.012292941646063033`}, {4., -0.28920202988667426`}, {5., 
         0.33350115634193866`}, {6., -0.1503716566215855}, {7., 
         0.03052470804632278}}]}}, {{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               DiskBox[{0, 0}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], {{{1., -0.16466785463028852`}}, {{2., 
         0.36721378103418023`}}, {{3., -0.27261229850292346`}}, {{4., 
         0.11352227000083767`}}, {{5., -0.028780446120923057`}}, {{6., 
         0.004092824527804399}}, {{7., -0.00019376041616544907`}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], {{{1., -0.5627991059678531}}, {{
         2., -0.3454832727635421}}, {{3., 0.49558300661884086`}}, {{
         4., -0.19136638615493579`}}, {{5., 0.011364216885283803`}}, {{6., 
         0.0147483155804113}}, {{7., -0.0048120316839726255`}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], {{{1., -0.22180450714867894`}}, {{
         2., -0.2191337527660741}}, {{3., 0.012292941646063033`}}, {{
         4., -0.28920202988667426`}}, {{5., 0.33350115634193866`}}, {{
         6., -0.1503716566215855}}, {{7., 
         0.03052470804632278}}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     0.8, Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.8750000000000002, 0}, DisplayFunction :> Identity, 
     Epilog -> {
       InsetBox[
        BoxData[
         FormBox[
          StyleBox["\"I=3\"", Bold, 
           RGBColor[1, 0, 0], 20, FontFamily -> "Times", StripOnInput -> 
           False], TraditionalForm]], 
        Scaled[{0.1, 0.94}]]}, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"\[ScriptCapitalD](IMK)\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(K\\), \\(i\\)]\\)\"", TraditionalForm], 
        None}}, FrameStyle -> Directive[
       GrayLevel[0], 
       Thickness[Large]], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {19, Bold, 
       GrayLevel[0], FontFamily -> "Times"}, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.8750000000000002, 7.}, {-0.5627991059678531, 
      0.49558300661884086`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       StyleBox["\"|IM>=|3 -3>\"", Bold, 15, 
        GrayLevel[0], FontFamily -> "Times", StripOnInput -> False], 
       StyleBox["\"|IM>=|3 -2>\"", Bold, 15, 
        GrayLevel[0], FontFamily -> "Times", StripOnInput -> False], 
       StyleBox["\"|IM>=|3 -1>\"", Bold, 15, 
        GrayLevel[0], FontFamily -> "Times", StripOnInput -> False], 
       StyleBox["\"|IM>=|3 0>\"", Bold, 15, 
        GrayLevel[0], FontFamily -> "Times", StripOnInput -> False], 
       StyleBox["\"|IM>=|3 1>\"", Bold, 15, 
        GrayLevel[0], FontFamily -> "Times", StripOnInput -> False], 
       StyleBox["\"|IM>=|3 2>\"", Bold, 15, 
        GrayLevel[0], FontFamily -> "Times", StripOnInput -> False], 
       StyleBox["\"|IM>=|3 3>\"", Bold, 15, 
        GrayLevel[0], FontFamily -> "Times", StripOnInput -> False]}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.17900000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.17900000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.17900000000000002`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 19, FontWeight -> Bold, 
          GrayLevel[0], FontFamily -> "Times"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"19", ",", "Bold", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.838977154832786*^9, 3.838977184299551*^9}, 
   3.838977287780498*^9, 3.83897783968604*^9},
 CellLabel->
  "Out[227]=",ExpressionUUID->"ab9da4f9-6a4a-4006-8731-3b02b79ff459"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., 0.025261081545427295`}, {2., 0.23862998037232572`}, {3.,
          0.5211240509241569}, {4., 0.11024575140626314`}, {
         5., -0.5211240509241569}, {6., 0.23862998037232572`}, {
         7., -0.025261081545427295`}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., 0.03052470804632278}, {2., 0.1503716566215855}, {3., 
         0.33350115634193866`}, {4., 0.28920202988667426`}, {5., 
         0.012292941646063033`}, {6., 0.2191337527660741}, {
         7., -0.22180450714867894`}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., 0.0048120316839726255`}, {2., 0.0147483155804113}, {
         3., -0.011364216885283803`}, {4., -0.19136638615493579`}, {
         5., -0.49558300661884086`}, {6., -0.3454832727635421}, {7., 
         0.5627991059678531}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -0.00019376041616544907`}, {
         2., -0.004092824527804399}, {3., -0.028780446120923057`}, {
         4., -0.11352227000083767`}, {5., -0.27261229850292346`}, {
         6., -0.36721378103418023`}, {7., -0.16466785463028852`}}]}}, {{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               DiskBox[{0, 0}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], {{{1., 0.025261081545427295`}}, {{2., 
         0.23862998037232572`}}, {{3., 0.5211240509241569}}, {{4., 
         0.11024575140626314`}}, {{5., -0.5211240509241569}}, {{6., 
         0.23862998037232572`}}, {{7., -0.025261081545427295`}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], {{{1., 0.03052470804632278}}, {{2., 
         0.1503716566215855}}, {{3., 0.33350115634193866`}}, {{4., 
         0.28920202988667426`}}, {{5., 0.012292941646063033`}}, {{6., 
         0.2191337527660741}}, {{7., -0.22180450714867894`}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], {{{1., 0.0048120316839726255`}}, {{2., 
         0.0147483155804113}}, {{3., -0.011364216885283803`}}, {{
         4., -0.19136638615493579`}}, {{5., -0.49558300661884086`}}, {{
         6., -0.3454832727635421}}, {{7., 0.5627991059678531}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[
                
                NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                  1, 1 - 3^Rational[1, 2]}}, {{0, 
                  1}, {-1, -0.7320508075688772}, {
                  1, -0.7320508075688772}}]]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.922526, 0.385626, 0.209179], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[10]], {{{1., -0.00019376041616544907`}}, {{
         2., -0.004092824527804399}}, {{3., -0.028780446120923057`}}, {{
         4., -0.11352227000083767`}}, {{5., -0.27261229850292346`}}, {{
         6., -0.36721378103418023`}}, {{
         7., -0.16466785463028852`}}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     0.8, Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.8750000000000002, 0}, DisplayFunction :> Identity, 
     Epilog -> {
       InsetBox[
        BoxData[
         FormBox[
          StyleBox["\"I=3\"", Bold, 
           RGBColor[1, 0, 0], 20, FontFamily -> "Times", StripOnInput -> 
           False], TraditionalForm]], 
        Scaled[{0.1, 0.94}]]}, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"\[ScriptCapitalD](IMK)\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(K\\), \\(i\\)]\\)\"", TraditionalForm], 
        None}}, FrameStyle -> Directive[
       GrayLevel[0], 
       Thickness[Large]], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {19, Bold, 
       GrayLevel[0], FontFamily -> "Times"}, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.8750000000000002, 7.}, {-0.5211240509241569, 
      0.5627991059678531}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       StyleBox["\"|IM>=|3 -3>\"", Bold, 15, 
        GrayLevel[0], FontFamily -> "Times", StripOnInput -> False], 
       StyleBox["\"|IM>=|3 -2>\"", Bold, 15, 
        GrayLevel[0], FontFamily -> "Times", StripOnInput -> False], 
       StyleBox["\"|IM>=|3 -1>\"", Bold, 15, 
        GrayLevel[0], FontFamily -> "Times", StripOnInput -> False], 
       StyleBox["\"|IM>=|3 0>\"", Bold, 15, 
        GrayLevel[0], FontFamily -> "Times", StripOnInput -> False], 
       StyleBox["\"|IM>=|3 1>\"", Bold, 15, 
        GrayLevel[0], FontFamily -> "Times", StripOnInput -> False], 
       StyleBox["\"|IM>=|3 2>\"", Bold, 15, 
        GrayLevel[0], FontFamily -> "Times", StripOnInput -> False], 
       StyleBox["\"|IM>=|3 3>\"", Bold, 15, 
        GrayLevel[0], FontFamily -> "Times", StripOnInput -> False]}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.17900000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.17900000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.17900000000000002`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.17900000000000002`] -> 
                    Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 19, FontWeight -> Bold, 
          GrayLevel[0], FontFamily -> "Times"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}], ",", 
                    RowBox[{"Offset", "[", "10", "]"}]}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"19", ",", "Bold", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.838977154832786*^9, 3.838977184299551*^9}, 
   3.838977287780498*^9, 3.838977839945574*^9},
 CellLabel->
  "Out[228]=",ExpressionUUID->"a281be26-a9a7-4564-b065-5840ecff2eea"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1059, 1001},
WindowMargins->{{435, Automatic}, {Automatic, 157}},
FrontEndVersion->"12.3 for Mac OS X x86 (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"25e5e3d9-b5ca-464c-8b53-9ef2d8eb348a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 148675, 2445, 546, "Section",ExpressionUUID->"01d77aa6-bf6a-4dc9-bcaf-62880e8d43c0"],
Cell[CellGroupData[{
Cell[149280, 2471, 504, 14, 48, "Subsubsection",ExpressionUUID->"3652b8cc-573f-47bd-8c65-51dbb0f1e138"],
Cell[149787, 2487, 225, 4, 30, "Input",ExpressionUUID->"2f63c0dd-69cc-4907-b2cb-408ebc423eee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150049, 2496, 198, 4, 54, "Subsection",ExpressionUUID->"c152163d-07db-4038-adbf-ba0a7760f534"],
Cell[150250, 2502, 699, 19, 94, "Input",ExpressionUUID->"2a31fafa-58eb-4176-993d-399e2de4bd50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150986, 2526, 224, 5, 54, "Subsection",ExpressionUUID->"4a81a205-830c-40de-bf1e-9eac77124ffc"],
Cell[151213, 2533, 758, 21, 73, "Input",ExpressionUUID->"3f6791e4-0e94-44ae-9227-4211a9f7c15a"],
Cell[CellGroupData[{
Cell[151996, 2558, 231, 5, 45, "Subsubsection",ExpressionUUID->"51645b94-b298-4320-900e-02c9516a8137"],
Cell[152230, 2565, 906, 28, 52, "Input",ExpressionUUID->"32e11fd9-eacf-43be-9c4a-c72b7509b4c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153173, 2598, 266, 6, 45, "Subsubsection",ExpressionUUID->"4d1b3027-63a4-4b87-9576-6f332a6e4cc5"],
Cell[153442, 2606, 1462, 42, 52, "Input",ExpressionUUID->"8846187e-2749-40f9-ace7-7d925df63ab8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[154953, 2654, 307, 7, 54, "Subsection",ExpressionUUID->"104eaa90-98ca-47cd-9bb0-3f47076a3557"],
Cell[CellGroupData[{
Cell[155285, 2665, 1886, 52, 115, "Input",ExpressionUUID->"48f017fa-3677-45a3-9fb5-542de4379af5"],
Cell[157174, 2719, 3556, 81, 242, "Output",ExpressionUUID->"16d3fd40-98a7-40d8-9d7c-d18e98251d93"]
}, Open  ]],
Cell[160745, 2803, 569, 16, 30, "Input",ExpressionUUID->"2b204dc2-0478-475a-b96f-3b67945bb353"],
Cell[CellGroupData[{
Cell[161339, 2823, 1018, 25, 73, "Input",ExpressionUUID->"0e66a2e1-a3fe-4236-9e6a-cf91bf6ce9fd"],
Cell[162360, 2850, 2278, 76, 37, "Output",ExpressionUUID->"7facdc06-5428-4b7d-af45-b92d430d05b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164675, 2931, 2005, 49, 115, "Input",ExpressionUUID->"df0de257-406d-4e46-af2e-98d00c73e3cd"],
Cell[166683, 2982, 51520, 1098, 476, "Output",ExpressionUUID->"d3d4bd0e-b747-4391-b426-e385168410bf"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[218264, 4087, 196, 3, 67, "Section",ExpressionUUID->"4e13fb3f-3111-45cc-b5a3-1d69d4cc5a6d"],
Cell[218463, 4092, 647, 17, 30, "Input",ExpressionUUID->"0b3b3ab8-57ed-4a0a-a297-bc24f0466325"],
Cell[CellGroupData[{
Cell[219135, 4113, 3747, 93, 241, "Input",ExpressionUUID->"a967843c-c13f-45d5-92c6-9bcc984f5e4f"],
Cell[222885, 4208, 25814, 550, 476, "Output",ExpressionUUID->"ab9da4f9-6a4a-4006-8731-3b02b79ff459"],
Cell[248702, 4760, 32506, 694, 477, "Output",ExpressionUUID->"a281be26-a9a7-4564-b065-5840ecff2eea"]
}, Open  ]]
}, Open  ]]
}
]
*)

